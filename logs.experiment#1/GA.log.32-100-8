 >num_bits=32
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
done! Solution: f=32, s=11111111111111111111111111111111
Measure Mode: memory
Thread ID: 76111850
Fiber ID: 76870110
Total: 300.986328
Sort by: self_time

 %self      total      self      wait     child     calls  name
 49.44    148.805   148.805     0.000     0.000     5800   Hash#[]=
 20.41     87.119    61.420     0.000    25.699     1900   Object#crossover
  8.50     25.570    25.570     0.000     0.000   128532   String#[]
  2.70     11.473     8.125     0.000     3.348       20   Array#initialize
  0.85      2.660     2.551     0.000     0.109      100   Range#each
  0.59    285.490     1.777     0.000   283.713       39   Array#each
  0.59    300.986     1.777     0.000   299.209        1   Global#[No method]
  0.17      0.609     0.500     0.000     0.109        1   Array#sort
  0.15      0.441     0.441     0.000     0.000   124800   String#chr
  0.09      0.438     0.273     0.000     0.164    71584   Kernel#rand
  0.06    135.990     0.189     0.000   135.801       19   Object#reproduce
  0.06    299.209     0.189     0.000   299.020        1   Object#search
  0.06      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.06      0.184     0.184     0.000     0.000     1900   Float#>=
  0.06      0.184     0.184     0.000     0.000     1900   Fixnum#modulo
  0.06      0.811     0.170     0.000     0.641     2000   Object#onemax
  0.05    286.535     0.164     0.000   286.371     3901  *Integer#times
  0.05      0.164     0.164     0.000     0.000     7150   Fixnum#<=>
  0.05     11.801     0.164     0.000    11.637       20   Class#new
  0.05      0.164     0.164     0.000     0.000       20   <Class::Array>#allocate
  0.05      0.164     0.164     0.000     0.000       36   Array#first
  0.05      0.164     0.164     0.000     0.000     3832   <Class::Range>#allocate
  0.05      0.164     0.164     0.000     0.000     5684   Kernel#respond_to_missing?
  0.04     46.795     0.115     0.000    46.680     1900   Object#point_mutation
  0.04      0.279     0.115     0.000     0.164     1900   Object#binary_tournament
  0.04      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.04      0.219     0.109     0.000     0.109       19   IO#puts
  0.04      0.109     0.109     0.000     0.000       19   Fixnum#to_s
  0.04      0.328     0.109     0.000     0.219       19   Kernel#puts
  0.04      0.164     0.109     0.000     0.055       19   Array#sort!
  0.04    135.801     0.109     0.000   135.691       19   Enumerable#each_with_index
  0.04      0.109     0.109     0.000     0.000       38   IO#write

* indicates recursively called methods
