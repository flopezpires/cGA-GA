 >num_bits=64
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
done! Solution: f=64, s=1111111111111111111111111111111111111111111111111111111111111111
Measure Mode: memory
Thread ID: 77248490
Fiber ID: 78006870
Total: 924.586914
Sort by: self_time

 %self      total      self      wait     child     calls  name
 37.77    349.195   349.195     0.000     0.000    13900   Hash#[]=
 31.60    431.755   292.182     0.000   139.573     4600   Object#crossover
 15.08    139.444   139.444     0.000     0.000   604216   String#[]
  2.02     22.020    18.672     0.000     3.348       47   Array#initialize
  0.42    898.544     3.887     0.000   894.657       93   Array#each
  0.28      2.660     2.551     0.000     0.109      100   Range#each
  0.19    924.587     1.777     0.000   922.810        1   Global#[No method]
  0.05      0.609     0.500     0.000     0.109        1   Array#sort
  0.05      0.441     0.441     0.000     0.000   595200   String#chr
  0.03      0.438     0.273     0.000     0.164   319162   Kernel#rand
  0.02    548.653     0.189     0.000   548.464       46   Object#reproduce
  0.02    922.810     0.189     0.000   922.620        1   Object#search
  0.02      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.02      0.184     0.184     0.000     0.000     4600   Float#>=
  0.02      0.184     0.184     0.000     0.000     4600   Fixnum#modulo
  0.02      0.811     0.170     0.000     0.641     4700   Object#onemax
  0.02    910.136     0.164     0.000   909.972     9301  *Integer#times
  0.02      0.164     0.164     0.000     0.000    17342   Fixnum#<=>
  0.02     22.348     0.164     0.000    22.184       47   Class#new
  0.02      0.164     0.164     0.000     0.000       47   <Class::Array>#allocate
  0.02      0.164     0.164     0.000     0.000       89   Array#first
  0.02      0.164     0.164     0.000     0.000     9116   <Class::Range>#allocate
  0.02      0.164     0.164     0.000     0.000    13762   Kernel#respond_to_missing?
  0.01    112.713     0.115     0.000   112.598     4600   Object#point_mutation
  0.01      0.279     0.115     0.000     0.164     4600   Object#binary_tournament
  0.01      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.01      0.219     0.109     0.000     0.109       46   IO#puts
  0.01      0.109     0.109     0.000     0.000       46   Fixnum#to_s
  0.01      0.328     0.109     0.000     0.219       46   Kernel#puts
  0.01      0.164     0.109     0.000     0.055       46   Array#sort!
  0.01    548.464     0.109     0.000   548.354       46   Enumerable#each_with_index
  0.01      0.109     0.109     0.000     0.000       92   IO#write

* indicates recursively called methods
