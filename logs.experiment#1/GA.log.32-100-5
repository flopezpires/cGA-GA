 >num_bits=32
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
done! Solution: f=32, s=11111111111111111111111111111111
Measure Mode: memory
Thread ID: 79276010
Fiber ID: 80034390
Total: 330.838867
Sort by: self_time

 %self      total      self      wait     child     calls  name
 49.46    163.648   163.648     0.000     0.000     6400   Hash#[]=
 20.51     96.308    67.865     0.000    28.442     2100   Object#crossover
  8.56     28.313    28.313     0.000     0.000   141722   String#[]
  2.69     12.254     8.906     0.000     3.348       22   Array#initialize
  0.77      2.660     2.551     0.000     0.109      100   Range#each
  0.58    314.562     1.934     0.000   312.628       43   Array#each
  0.54    330.839     1.777     0.000   329.062        1   Global#[No method]
  0.15      0.609     0.500     0.000     0.109        1   Array#sort
  0.13      0.441     0.441     0.000     0.000   137600   String#chr
  0.08      0.438     0.273     0.000     0.164    78777   Kernel#rand
  0.06    150.218     0.189     0.000   150.028       21   Object#reproduce
  0.06    329.062     0.189     0.000   328.872        1   Object#search
  0.06      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.06      0.184     0.184     0.000     0.000     2100   Float#>=
  0.06      0.184     0.184     0.000     0.000     2100   Fixnum#modulo
  0.05      0.811     0.170     0.000     0.641     2200   Object#onemax
  0.05    316.388     0.164     0.000   316.224     4301  *Integer#times
  0.05      0.164     0.164     0.000     0.000     7716   Fixnum#<=>
  0.05     12.582     0.164     0.000    12.418       22   Class#new
  0.05      0.164     0.164     0.000     0.000       22   <Class::Array>#allocate
  0.05      0.164     0.164     0.000     0.000       39   Array#first
  0.05      0.164     0.164     0.000     0.000     4222   <Class::Range>#allocate
  0.05      0.164     0.164     0.000     0.000     6277   Kernel#respond_to_missing?
  0.03     51.678     0.115     0.000    51.562     2100   Object#point_mutation
  0.03      0.279     0.115     0.000     0.164     2100   Object#binary_tournament
  0.03      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.03      0.219     0.109     0.000     0.109       21   IO#puts
  0.03      0.109     0.109     0.000     0.000       21   Fixnum#to_s
  0.03      0.328     0.109     0.000     0.219       21   Kernel#puts
  0.03      0.164     0.109     0.000     0.055       21   Array#sort!
  0.03    150.028     0.109     0.000   149.919       21   Enumerable#each_with_index
  0.03      0.109     0.109     0.000     0.000       42   IO#write

* indicates recursively called methods
