 >num_bits=32
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
done! Solution: f=32, s=11111111111111111111111111111111
Measure Mode: memory
Thread ID: 76738530
Fiber ID: 77496760
Total: 464.612305
Sort by: self_time

 %self      total      self      wait     child     calls  name
 49.60    230.445   230.445     0.000     0.000     9100   Hash#[]=
 20.85    137.093    96.869     0.000    40.224     3000   Object#crossover
  8.63     40.095    40.095     0.000     0.000   201094   String#[]
  2.67     15.770    12.422     0.000     3.348       31   Array#initialize
  0.57    444.819     2.637     0.000   442.183       61   Array#each
  0.55      2.660     2.551     0.000     0.109      100   Range#each
  0.38    464.612     1.777     0.000   462.835        1   Global#[No method]
  0.11      0.609     0.500     0.000     0.109        1   Array#sort
  0.10      0.441     0.441     0.000     0.000   195200   String#chr
  0.06      0.438     0.273     0.000     0.164   111177   Kernel#rand
  0.04    213.679     0.189     0.000   213.489       30   Object#reproduce
  0.04    462.835     0.189     0.000   462.646        1   Object#search
  0.04      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.04      0.184     0.184     0.000     0.000     3000   Float#>=
  0.04      0.184     0.184     0.000     0.000     3000   Fixnum#modulo
  0.04      0.811     0.170     0.000     0.641     3100   Object#onemax
  0.04    450.161     0.164     0.000   449.997     6101  *Integer#times
  0.04      0.164     0.164     0.000     0.000    10411   Fixnum#<=>
  0.04     16.098     0.164     0.000    15.934       31   Class#new
  0.04      0.164     0.164     0.000     0.000       31   <Class::Array>#allocate
  0.04      0.164     0.164     0.000     0.000       54   Array#first
  0.04      0.164     0.164     0.000     0.000     5994   <Class::Range>#allocate
  0.04      0.164     0.164     0.000     0.000     8977   Kernel#respond_to_missing?
  0.02     73.650     0.115     0.000    73.535     3000   Object#point_mutation
  0.02      0.279     0.115     0.000     0.164     3000   Object#binary_tournament
  0.02      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.02      0.219     0.109     0.000     0.109       30   IO#puts
  0.02      0.109     0.109     0.000     0.000       30   Fixnum#to_s
  0.02      0.328     0.109     0.000     0.219       30   Kernel#puts
  0.02      0.164     0.109     0.000     0.055       30   Array#sort!
  0.02    213.489     0.109     0.000   213.380       30   Enumerable#each_with_index
  0.02      0.109     0.109     0.000     0.000       60   IO#write

* indicates recursively called methods
