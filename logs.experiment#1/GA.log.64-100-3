 >num_bits=64
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
done! Solution: f=64, s=1111111111111111111111111111111111111111111111111111111111111111
Measure Mode: memory
Thread ID: 75241450
Fiber ID: 75999830
Total: 1079.356445
Sort by: self_time

 %self      total      self      wait     child     calls  name
 37.85    408.570   408.570     0.000     0.000    16300   Hash#[]=
 31.77    503.868   342.963     0.000   160.905     5400   Object#crossover
 14.90    160.776   160.776     0.000     0.000   708176   String#[]
  2.02     25.145    21.797     0.000     3.348       55   Array#initialize
  0.42   1050.188     4.512     0.000  1045.677      109   Array#each
  0.24      2.660     2.551     0.000     0.109      100   Range#each
  0.16   1079.356     1.777     0.000  1077.579        1   Global#[No method]
  0.05      0.609     0.500     0.000     0.109        1   Array#sort
  0.04      0.441     0.441     0.000     0.000   697600   String#chr
  0.03      0.438     0.273     0.000     0.164   373545   Kernel#rand
  0.02    640.923     0.189     0.000   640.733       54   Object#reproduce
  0.02   1077.579     0.189     0.000  1077.390        1   Object#search
  0.02      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.02      0.184     0.184     0.000     0.000     5400   Float#>=
  0.02      0.184     0.184     0.000     0.000     5400   Fixnum#modulo
  0.02      0.811     0.170     0.000     0.641     5500   Object#onemax
  0.02   1064.905     0.164     0.000  1064.741    10901  *Integer#times
  0.02      0.164     0.164     0.000     0.000    20269   Fixnum#<=>
  0.02     25.473     0.164     0.000    25.309       55   Class#new
  0.02      0.164     0.164     0.000     0.000       55   <Class::Array>#allocate
  0.02      0.164     0.164     0.000     0.000       92   Array#first
  0.02      0.164     0.164     0.000     0.000    10676   <Class::Range>#allocate
  0.02      0.164     0.164     0.000     0.000    16145   Kernel#respond_to_missing?
  0.01    132.244     0.115     0.000   132.129     5400   Object#point_mutation
  0.01      0.279     0.115     0.000     0.164     5400   Object#binary_tournament
  0.01      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.01      0.219     0.109     0.000     0.109       54   IO#puts
  0.01      0.109     0.109     0.000     0.000       54   Fixnum#to_s
  0.01      0.328     0.109     0.000     0.219       54   Kernel#puts
  0.01      0.164     0.109     0.000     0.055       54   Array#sort!
  0.01    640.733     0.109     0.000   640.624       54   Enumerable#each_with_index
  0.01      0.109     0.109     0.000     0.000      108   IO#write

* indicates recursively called methods
