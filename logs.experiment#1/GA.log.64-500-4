 >num_bits=64
 >population=500
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
done! Solution: f=64, s=1111111111111111111111111111111111111111111111111111111111111111
Measure Mode: memory
Thread ID: 80664580
Fiber ID: 81846610
Total: 0.000000
Sort by: self_time

 %self      total      self      wait     child     calls  name
   NaN      0.000     0.000     0.000     0.000       46   IO#write
   NaN      0.000     0.000     0.000     0.000       23   IO#puts
   NaN      0.000     0.000     0.000     0.000       23   Kernel#puts
   NaN      0.000     0.000     0.000     0.000       23   Fixnum#to_s
   NaN      0.000     0.000     0.000     0.000       23   Array#sort!
   NaN      0.000     0.000     0.000     0.000    11500   Object#point_mutation
   NaN      0.000     0.000     0.000     0.000    11500   Float#>=
   NaN      0.000     0.000     0.000     0.000    11500   Object#crossover
   NaN      0.000     0.000     0.000     0.000    11500   Fixnum#modulo
   NaN      0.000     0.000     0.000     0.000       23   Enumerable#each_with_index
   NaN      0.000     0.000     0.000     0.000       23   Object#reproduce
   NaN      0.000     0.000     0.000     0.000    34296   Kernel#respond_to_missing?
   NaN      0.000     0.000     0.000     0.000    11500   Object#binary_tournament
   NaN      0.000     0.000     0.000     0.000       42   Array#first
   NaN      0.000     0.000     0.000     0.000    50068   Fixnum#<=>
   NaN      0.000     0.000     0.000     0.000        1   Array#sort
   NaN      0.000     0.000     0.000     0.000    35000   Hash#[]=
   NaN      0.000     0.000     0.000     0.000  1504000   String#chr
   NaN      0.000     0.000     0.000     0.000  1526552   String#[]
   NaN      0.000     0.000     0.000     0.000    23501  *Integer#times
   NaN      0.000     0.000     0.000     0.000    12000   Object#onemax
   NaN      0.000     0.000     0.000     0.000       47   Array#each
   NaN      0.000     0.000     0.000     0.000   813796   Kernel#rand
   NaN      0.000     0.000     0.000     0.000      500   Range#each
   NaN      0.000     0.000     0.000     0.000      500   Enumerable#inject
   NaN      0.000     0.000     0.000     0.000    23052   <Class::Range>#allocate
   NaN      0.000     0.000     0.000     0.000      500   Object#random_bitstring
   NaN      0.000     0.000     0.000     0.000       24   Array#initialize
   NaN      0.000     0.000     0.000     0.000       24   <Class::Array>#allocate
   NaN      0.000     0.000     0.000     0.000       24   Class#new
   NaN      0.000     0.000     0.000     0.000        1   Object#search
   NaN      0.000     0.000     0.000     0.000        1   Global#[No method]

* indicates recursively called methods
