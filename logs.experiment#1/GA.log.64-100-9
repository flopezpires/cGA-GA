 >num_bits=64
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
done! Solution: f=64, s=1111111111111111111111111111111111111111111111111111111111111111
Measure Mode: memory
Thread ID: 67923930
Fiber ID: 68682410
Total: 747.037109
Sort by: self_time

 %self      total      self      wait     child     calls  name
 37.80    282.398   282.398     0.000     0.000    11200   Hash#[]=
 31.46    347.193   235.053     0.000   112.141     3700   Object#crossover
 14.99    112.012   112.012     0.000     0.000   487260   String#[]
  2.03     18.504    15.156     0.000     3.348       38   Array#initialize
  0.43    724.510     3.184     0.000   721.326       75   Array#each
  0.34      2.660     2.551     0.000     0.109      100   Range#each
  0.24    747.037     1.777     0.000   745.260        1   Global#[No method]
  0.07      0.609     0.500     0.000     0.109        1   Array#sort
  0.06      0.441     0.441     0.000     0.000   480000   String#chr
  0.04      0.438     0.273     0.000     0.164   257974   Kernel#rand
  0.03    441.416     0.189     0.000   441.227       37   Object#reproduce
  0.03    745.260     0.189     0.000   745.070        1   Object#search
  0.02      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.02      0.184     0.184     0.000     0.000     3700   Float#>=
  0.02      0.184     0.184     0.000     0.000     3700   Fixnum#modulo
  0.02      0.811     0.170     0.000     0.641     3800   Object#onemax
  0.02    732.586     0.164     0.000   732.422     7501  *Integer#times
  0.02      0.164     0.164     0.000     0.000    14567   Fixnum#<=>
  0.02     18.832     0.164     0.000    18.668       38   Class#new
  0.02      0.164     0.164     0.000     0.000       38   <Class::Array>#allocate
  0.02      0.164     0.164     0.000     0.000       70   Array#first
  0.02      0.164     0.164     0.000     0.000     7360   <Class::Range>#allocate
  0.02      0.164     0.164     0.000     0.000    11074   Kernel#respond_to_missing?
  0.02     90.740     0.115     0.000    90.625     3700   Object#point_mutation
  0.02      0.279     0.115     0.000     0.164     3700   Object#binary_tournament
  0.02      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.01      0.219     0.109     0.000     0.109       37   IO#puts
  0.01      0.109     0.109     0.000     0.000       37   Fixnum#to_s
  0.01      0.328     0.109     0.000     0.219       37   Kernel#puts
  0.01      0.164     0.109     0.000     0.055       37   Array#sort!
  0.01    441.227     0.109     0.000   441.117       37   Enumerable#each_with_index
  0.01      0.109     0.109     0.000     0.000       74   IO#write

* indicates recursively called methods
