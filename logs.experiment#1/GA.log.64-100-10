 >num_bits=64
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
done! Solution: f=64, s=1111111111111111111111111111111111111111111111111111111111111111
Measure Mode: memory
Thread ID: 82726890
Fiber ID: 83485150
Total: 1099.585938
Sort by: self_time

 %self      total      self      wait     child     calls  name
 37.83    415.992   415.992     0.000     0.000    16600   Hash#[]=
 31.77    513.766   349.311     0.000   164.455     5500   Object#crossover
 14.94    164.326   164.326     0.000     0.000   721164   String#[]
  2.02     25.535    22.188     0.000     3.348       56   Array#initialize
  0.42   1070.027     4.590     0.000  1065.438      111   Array#each
  0.23      2.660     2.551     0.000     0.109      100   Range#each
  0.16   1099.586     1.777     0.000  1097.809        1   Global#[No method]
  0.05      0.609     0.500     0.000     0.109        1   Array#sort
  0.04      0.441     0.441     0.000     0.000   710400   String#chr
  0.02      0.438     0.273     0.000     0.164   380328   Kernel#rand
  0.02    653.340     0.189     0.000   653.150       55   Object#reproduce
  0.02   1097.809     0.189     0.000  1097.619        1   Object#search
  0.02      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.02      0.184     0.184     0.000     0.000     5500   Float#>=
  0.02      0.184     0.184     0.000     0.000     5500   Fixnum#modulo
  0.02      0.811     0.170     0.000     0.641     5600   Object#onemax
  0.01   1085.135     0.164     0.000  1084.971    11101  *Integer#times
  0.01      0.164     0.164     0.000     0.000    20253   Fixnum#<=>
  0.01     25.863     0.164     0.000    25.699       56   Class#new
  0.01      0.164     0.164     0.000     0.000       56   <Class::Array>#allocate
  0.01      0.164     0.164     0.000     0.000       96   Array#first
  0.01      0.164     0.164     0.000     0.000    10864   <Class::Range>#allocate
  0.01      0.164     0.164     0.000     0.000    16428   Kernel#respond_to_missing?
  0.01    134.686     0.115     0.000   134.570     5500   Object#point_mutation
  0.01      0.279     0.115     0.000     0.164     5500   Object#binary_tournament
  0.01      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.01      0.219     0.109     0.000     0.109       55   IO#puts
  0.01      0.109     0.109     0.000     0.000       55   Fixnum#to_s
  0.01      0.328     0.109     0.000     0.219       55   Kernel#puts
  0.01      0.164     0.109     0.000     0.055       55   Array#sort!
  0.01    653.150     0.109     0.000   653.041       55   Enumerable#each_with_index
  0.01      0.109     0.109     0.000     0.000      110   IO#write

* indicates recursively called methods
