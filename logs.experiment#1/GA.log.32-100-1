 >num_bits=32
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
done! Solution: f=32, s=11111111111111111111111111111111
Measure Mode: memory
Thread ID: 82776050
Fiber ID: 83534450
Total: 314.380859
Sort by: self_time

 %self      total      self      wait     child     calls  name
 49.69    156.227   156.227     0.000     0.000     6100   Hash#[]=
 20.56     90.182    64.643     0.000    25.539     2000   Object#crossover
  8.08     25.410    25.410     0.000     0.000   135110   String#[]
  2.71     11.863     8.516     0.000     3.348       21   Array#initialize
  0.81      2.660     2.551     0.000     0.109      100   Range#each
  0.59    298.494     1.855     0.000   296.639       41   Array#each
  0.57    314.381     1.777     0.000   312.604        1   Global#[No method]
  0.16      0.609     0.500     0.000     0.109        1   Array#sort
  0.14      0.441     0.441     0.000     0.000   131200   String#chr
  0.09      0.438     0.273     0.000     0.164    75177   Kernel#rand
  0.06    141.572     0.189     0.000   141.383       20   Object#reproduce
  0.06    312.604     0.189     0.000   312.414        1   Object#search
  0.06      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.06      0.184     0.184     0.000     0.000     2000   Float#>=
  0.06      0.184     0.184     0.000     0.000     2000   Fixnum#modulo
  0.05      0.811     0.170     0.000     0.641     2100   Object#onemax
  0.05    299.930     0.164     0.000   299.766     4101  *Integer#times
  0.05      0.164     0.164     0.000     0.000     7669   Fixnum#<=>
  0.05     12.191     0.164     0.000    12.027       21   Class#new
  0.05      0.164     0.164     0.000     0.000       21   <Class::Array>#allocate
  0.05      0.164     0.164     0.000     0.000       37   Array#first
  0.05      0.164     0.164     0.000     0.000     4010   <Class::Range>#allocate
  0.05      0.164     0.164     0.000     0.000     5977   Kernel#respond_to_missing?
  0.04     49.236     0.115     0.000    49.121     2000   Object#point_mutation
  0.04      0.279     0.115     0.000     0.164     2000   Object#binary_tournament
  0.04      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.03      0.219     0.109     0.000     0.109       20   IO#puts
  0.03      0.109     0.109     0.000     0.000       20   Fixnum#to_s
  0.03      0.328     0.109     0.000     0.219       20   Kernel#puts
  0.03      0.164     0.109     0.000     0.055       20   Array#sort!
  0.03    141.383     0.109     0.000   141.273       20   Enumerable#each_with_index
  0.03      0.109     0.109     0.000     0.000       40   IO#write

* indicates recursively called methods
