 >num_bits=64
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
done! Solution: f=64, s=1111111111111111111111111111111111111111111111111111111111111111
Measure Mode: memory
Thread ID: 73209830
Fiber ID: 73968230
Total: 961.675781
Sort by: self_time

 %self      total      self      wait     child     calls  name
 37.85    364.039   364.039     0.000     0.000    14500   Hash#[]=
 31.70    448.180   304.877     0.000   143.303     4800   Object#crossover
 14.89    143.174   143.174     0.000     0.000   630174   String#[]
  2.02     22.801    19.453     0.000     3.348       49   Array#initialize
  0.42    934.852     4.043     0.000   930.809       97   Array#each
  0.27      2.660     2.551     0.000     0.109      100   Range#each
  0.18    961.676     1.777     0.000   959.898        1   Global#[No method]
  0.05      0.609     0.500     0.000     0.109        1   Array#sort
  0.05      0.441     0.441     0.000     0.000   620800   String#chr
  0.03      0.438     0.273     0.000     0.164   332738   Kernel#rand
  0.02    570.117     0.189     0.000   569.928       48   Object#reproduce
  0.02    959.898     0.189     0.000   959.709        1   Object#search
  0.02      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.02      0.184     0.184     0.000     0.000     4800   Float#>=
  0.02      0.184     0.184     0.000     0.000     4800   Fixnum#modulo
  0.02      0.811     0.170     0.000     0.641     4900   Object#onemax
  0.02    947.225     0.164     0.000   947.061     9701  *Integer#times
  0.02      0.164     0.164     0.000     0.000    18152   Fixnum#<=>
  0.02     23.129     0.164     0.000    22.965       49   Class#new
  0.02      0.164     0.164     0.000     0.000       49   <Class::Array>#allocate
  0.02      0.164     0.164     0.000     0.000       86   Array#first
  0.02      0.164     0.164     0.000     0.000     9474   <Class::Range>#allocate
  0.02      0.164     0.164     0.000     0.000    14338   Kernel#respond_to_missing?
  0.01    117.596     0.115     0.000   117.480     4800   Object#point_mutation
  0.01      0.279     0.115     0.000     0.164     4800   Object#binary_tournament
  0.01      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.01      0.219     0.109     0.000     0.109       48   IO#puts
  0.01      0.109     0.109     0.000     0.000       48   Fixnum#to_s
  0.01      0.328     0.109     0.000     0.219       48   Kernel#puts
  0.01      0.164     0.109     0.000     0.055       48   Array#sort!
  0.01    569.928     0.109     0.000   569.818       48   Enumerable#each_with_index
  0.01      0.109     0.109     0.000     0.000       96   IO#write

* indicates recursively called methods
