 >num_bits=128
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: memory
Thread ID: 84090900
Fiber ID: 85325100
Total: 0.000000
Sort by: self_time

 %self      total      self      wait     child     calls  name
   NaN      0.000     0.000     0.000     0.000      164   IO#write
   NaN      0.000     0.000     0.000     0.000       82   IO#puts
   NaN      0.000     0.000     0.000     0.000       82   Kernel#puts
   NaN      0.000     0.000     0.000     0.000       82   Fixnum#to_s
   NaN      0.000     0.000     0.000     0.000       82   Array#sort!
   NaN      0.000     0.000     0.000     0.000    16400   Object#point_mutation
   NaN      0.000     0.000     0.000     0.000    16400   Float#>=
   NaN      0.000     0.000     0.000     0.000    16400   Object#crossover
   NaN      0.000     0.000     0.000     0.000    16400   Fixnum#modulo
   NaN      0.000     0.000     0.000     0.000       82   Enumerable#each_with_index
   NaN      0.000     0.000     0.000     0.000       82   Object#reproduce
   NaN      0.000     0.000     0.000     0.000    48941   Kernel#respond_to_missing?
   NaN      0.000     0.000     0.000     0.000    16400   Object#binary_tournament
   NaN      0.000     0.000     0.000     0.000      152   Array#first
   NaN      0.000     0.000     0.000     0.000    66957   Fixnum#<=>
   NaN      0.000     0.000     0.000     0.000        1   Array#sort
   NaN      0.000     0.000     0.000     0.000    49400   Hash#[]=
   NaN      0.000     0.000     0.000     0.000  4224000   String#chr
   NaN      0.000     0.000     0.000     0.000  4256116   String#[]
   NaN      0.000     0.000     0.000     0.000    33001  *Integer#times
   NaN      0.000     0.000     0.000     0.000    16600   Object#onemax
   NaN      0.000     0.000     0.000     0.000      165   Array#each
   NaN      0.000     0.000     0.000     0.000  2190141   Kernel#rand
   NaN      0.000     0.000     0.000     0.000      200   Range#each
   NaN      0.000     0.000     0.000     0.000      200   Enumerable#inject
   NaN      0.000     0.000     0.000     0.000    32316   <Class::Range>#allocate
   NaN      0.000     0.000     0.000     0.000      200   Object#random_bitstring
   NaN      0.000     0.000     0.000     0.000       83   Array#initialize
   NaN      0.000     0.000     0.000     0.000       83   <Class::Array>#allocate
   NaN      0.000     0.000     0.000     0.000       83   Class#new
   NaN      0.000     0.000     0.000     0.000        1   Object#search
   NaN      0.000     0.000     0.000     0.000        1   Global#[No method]

* indicates recursively called methods
