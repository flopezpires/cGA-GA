 >num_bits=32
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
done! Solution: f=32, s=11111111111111111111111111111111
Measure Mode: memory
Thread ID: 79030250
Fiber ID: 79788630
Total: 360.228516
Sort by: self_time

 %self      total      self      wait     child     calls  name
 49.55    178.492   178.492     0.000     0.000     7000   Hash#[]=
 20.63    105.033    74.311     0.000    30.723     2300   Object#crossover
  8.49     30.594    30.594     0.000     0.000   154908   String#[]
  2.69     13.035     9.688     0.000     3.348       24   Array#initialize
  0.71      2.660     2.551     0.000     0.109      100   Range#each
  0.58    343.170     2.090     0.000   341.080       47   Array#each
  0.49    360.229     1.777     0.000   358.451        1   Global#[No method]
  0.14      0.609     0.500     0.000     0.109        1   Array#sort
  0.12      0.441     0.441     0.000     0.000   150400   String#chr
  0.08      0.438     0.273     0.000     0.164    85979   Kernel#rand
  0.05    163.982     0.189     0.000   163.793       23   Object#reproduce
  0.05    358.451     0.189     0.000   358.262        1   Object#search
  0.05      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.05      0.184     0.184     0.000     0.000     2300   Float#>=
  0.05      0.184     0.184     0.000     0.000     2300   Fixnum#modulo
  0.05      0.811     0.170     0.000     0.641     2400   Object#onemax
  0.05    345.777     0.164     0.000   345.613     4701  *Integer#times
  0.05      0.164     0.164     0.000     0.000     8388   Fixnum#<=>
  0.05     13.363     0.164     0.000    13.199       24   Class#new
  0.05      0.164     0.164     0.000     0.000       24   <Class::Array>#allocate
  0.05      0.164     0.164     0.000     0.000       45   Array#first
  0.05      0.164     0.164     0.000     0.000     4608   <Class::Range>#allocate
  0.05      0.164     0.164     0.000     0.000     6879   Kernel#respond_to_missing?
  0.03     56.561     0.115     0.000    56.445     2300   Object#point_mutation
  0.03      0.279     0.115     0.000     0.164     2300   Object#binary_tournament
  0.03      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.03      0.219     0.109     0.000     0.109       23   IO#puts
  0.03      0.109     0.109     0.000     0.000       23   Fixnum#to_s
  0.03      0.328     0.109     0.000     0.219       23   Kernel#puts
  0.03      0.164     0.109     0.000     0.055       23   Array#sort!
  0.03    163.793     0.109     0.000   163.684       23   Enumerable#each_with_index
  0.03      0.109     0.109     0.000     0.000       46   IO#write

* indicates recursively called methods
