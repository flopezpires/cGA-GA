 >num_bits=256
 >population=500
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
Measure Mode: memory
Thread ID: 80205810
Fiber ID: 80964550
Total: 23404.657227
Sort by: self_time

 %self      total      self      wait     child     calls  name
 52.55  18312.450 12298.041     0.000  6014.409    49000   Object#crossover
 25.70   6014.280  6014.280     0.000     0.000 25312044   String#[]
 15.70   3674.195  3674.195     0.000     0.000   147500   Hash#[]=
  0.83    206.785   193.672     0.000    13.113       99   Array#initialize
  0.05     12.426    12.316     0.000     0.109      500   Range#each
  0.03  23192.286     7.949     0.000 23184.337      197   Array#each
  0.01      2.172     2.062     0.000     0.109        1   Array#sort
  0.01  23404.657     1.777     0.000 23402.880        1   Global#[No method]
  0.00      0.441     0.441     0.000     0.000 25216000   String#chr
  0.00      0.438     0.273     0.000     0.164 12867096   Kernel#rand
  0.00  19517.396     0.189     0.000 19517.206       98   Object#reproduce
  0.00  23402.880     0.189     0.000 23402.690        1   Object#search
  0.00     12.609     0.184     0.000    12.426      500   Enumerable#inject
  0.00      0.184     0.184     0.000     0.000    49000   Float#>=
  0.00      0.184     0.184     0.000     0.000    49000   Fixnum#modulo
  0.00      0.811     0.170     0.000     0.641    49500   Object#onemax
  0.00  23347.628     0.164     0.000 23347.464    98501  *Integer#times
  0.00      0.164     0.164     0.000     0.000   225372   Fixnum#<=>
  0.00    207.113     0.164     0.000   206.949       99   Class#new
  0.00      0.164     0.164     0.000     0.000       99   <Class::Array>#allocate
  0.00      0.164     0.164     0.000     0.000      177   Array#first
  0.00      0.164     0.164     0.000     0.000    96544   <Class::Range>#allocate
  0.00      0.164     0.164     0.000     0.000   146096   Kernel#respond_to_missing?
  0.00   1196.697     0.115     0.000  1196.582    49000   Object#point_mutation
  0.00      0.279     0.115     0.000     0.164    49000   Object#binary_tournament
  0.00     12.834     0.115     0.000    12.719      500   Object#random_bitstring
  0.00      0.219     0.109     0.000     0.109       98   IO#puts
  0.00      0.109     0.109     0.000     0.000       98   Fixnum#to_s
  0.00      0.328     0.109     0.000     0.219       98   Kernel#puts
  0.00      0.164     0.109     0.000     0.055       98   Array#sort!
  0.00  19517.206     0.109     0.000 19517.097       98   Enumerable#each_with_index
  0.00      0.109     0.109     0.000     0.000      196   IO#write

* indicates recursively called methods
