 >num_bits=128
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
 > gen 123
 > gen 124
 > gen 125
 > gen 126
 > gen 127
Measure Mode: memory
Thread ID: 69169130
Fiber ID: 69927710
Total: 3736.815430
Sort by: self_time

 %self      total      self      wait     child     calls  name
 43.16   2396.757  1612.689     0.000   784.067    12800   Object#crossover
 25.63    957.789   957.789     0.000     0.000    38500   Hash#[]=
 20.98    783.938   783.938     0.000     0.000  3314742   String#[]
  1.36     54.051    50.703     0.000     3.348      129   Array#initialize
  0.28   3678.741    10.293     0.000  3668.448      257   Array#each
  0.07      2.660     2.551     0.000     0.109      100   Range#each
  0.05   3736.815     1.777     0.000  3735.038        1   Global#[No method]
  0.01      0.609     0.500     0.000     0.109        1   Array#sort
  0.01      0.441     0.441     0.000     0.000  3289600   String#chr
  0.01      0.438     0.273     0.000     0.164  1702316   Kernel#rand
  0.01   2720.257     0.189     0.000  2720.067      128   Object#reproduce
  0.01   3735.038     0.189     0.000  3734.849        1   Object#search
  0.00      2.844     0.184     0.000     2.660      100   Enumerable#inject
  0.00      0.184     0.184     0.000     0.000    12800   Float#>=
  0.00      0.184     0.184     0.000     0.000    12800   Fixnum#modulo
  0.00      0.811     0.170     0.000     0.641    12900   Object#onemax
  0.00   3722.364     0.164     0.000  3722.200    25701  *Integer#times
  0.00      0.164     0.164     0.000     0.000    46871   Fixnum#<=>
  0.00     54.379     0.164     0.000    54.215      129   Class#new
  0.00      0.164     0.164     0.000     0.000      129   <Class::Array>#allocate
  0.00      0.164     0.164     0.000     0.000      216   Array#first
  0.00      0.164     0.164     0.000     0.000    25242   <Class::Range>#allocate
  0.00      0.164     0.164     0.000     0.000    38316   Kernel#respond_to_missing?
  0.00    312.908     0.115     0.000   312.793    12800   Object#point_mutation
  0.00      0.279     0.115     0.000     0.164    12800   Object#binary_tournament
  0.00      3.068     0.115     0.000     2.953      100   Object#random_bitstring
  0.00      0.219     0.109     0.000     0.109      128   IO#puts
  0.00      0.109     0.109     0.000     0.000      128   Fixnum#to_s
  0.00      0.328     0.109     0.000     0.219      128   Kernel#puts
  0.00      0.164     0.109     0.000     0.055      128   Array#sort!
  0.00   2720.067     0.109     0.000  2719.958      128   Enumerable#each_with_index
  0.00      0.109     0.109     0.000     0.000      256   IO#write

* indicates recursively called methods
