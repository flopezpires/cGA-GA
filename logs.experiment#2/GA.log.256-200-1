 >num_bits=256
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
 > gen 123
 > gen 124
 > gen 125
 > gen 126
 > gen 127
 > gen 128
 > gen 129
 > gen 130
 > gen 131
 > gen 132
 > gen 133
 > gen 134
 > gen 135
 > gen 136
 > gen 137
 > gen 138
 > gen 139
 > gen 140
 > gen 141
 > gen 142
 > gen 143
Measure Mode: memory
Thread ID: 77250530
Fiber ID: 78009230
Total: 13771.369141
Sort by: self_time

 %self      total      self      wait     child     calls  name
 52.49  10778.791  7228.314     0.000  3550.477    28800   Object#crossover
 25.78   3550.348  3550.348     0.000     0.000 14853328   String#[]
 15.63   2152.711  2152.711     0.000     0.000    86600   Hash#[]=
  0.82    119.383   113.594     0.000     5.789      145   Array#initialize
  0.08  13647.572    11.543     0.000 13636.029      289   Array#each
  0.04      5.102     4.992     0.000     0.109      200   Range#each
  0.01  13771.369     1.777     0.000 13769.592        1   Global#[No method]
  0.01      1.000     0.891     0.000     0.109        1   Array#sort
  0.00      0.441     0.441     0.000     0.000 14796800   String#chr
  0.00      0.438     0.273     0.000     0.164  7538824   Kernel#rand
  0.00  11494.166     0.189     0.000 11493.977      144   Object#reproduce
  0.00  13769.592     0.189     0.000 13769.402        1   Object#search
  0.00      5.285     0.184     0.000     5.102      200   Enumerable#inject
  0.00      0.184     0.184     0.000     0.000    28800   Float#>=
  0.00      0.184     0.184     0.000     0.000    28800   Fixnum#modulo
  0.00      0.811     0.170     0.000     0.641    29000   Object#onemax
  0.00  13746.273     0.164     0.000 13746.109    57801  *Integer#times
  0.00      0.164     0.164     0.000     0.000   119200   Fixnum#<=>
  0.00    119.711     0.164     0.000   119.547      145   Class#new
  0.00      0.164     0.164     0.000     0.000      145   <Class::Array>#allocate
  0.00      0.164     0.164     0.000     0.000      257   Array#first
  0.00      0.164     0.164     0.000     0.000    56728   <Class::Range>#allocate
  0.00      0.164     0.164     0.000     0.000    86024   Kernel#respond_to_missing?
  0.00    703.533     0.115     0.000   703.418    28800   Object#point_mutation
  0.00      0.279     0.115     0.000     0.164    28800   Object#binary_tournament
  0.00      5.510     0.115     0.000     5.395      200   Object#random_bitstring
  0.00      0.219     0.109     0.000     0.109      144   IO#puts
  0.00      0.109     0.109     0.000     0.000      144   Fixnum#to_s
  0.00      0.328     0.109     0.000     0.219      144   Kernel#puts
  0.00      0.164     0.109     0.000     0.055      144   Array#sort!
  0.00  11493.977     0.109     0.000 11493.867      144   Enumerable#each_with_index
  0.00      0.109     0.109     0.000     0.000      288   IO#write

* indicates recursively called methods
