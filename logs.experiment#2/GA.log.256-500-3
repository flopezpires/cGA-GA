 >num_bits=256
 >population=500
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
Measure Mode: memory
Thread ID: 68896730
Fiber ID: 69655580
Total: 24354.704102
Sort by: self_time

 %self      total      self      wait     child     calls  name
 52.56  19057.106 12799.994     0.000  6257.112    51000   Object#crossover
 25.69   6256.983  6256.983     0.000     0.000 26339974   String#[]
 15.70   3822.633  3822.633     0.000     0.000   153500   Hash#[]=
  0.83    214.598   201.484     0.000    13.113      103   Array#initialize
  0.05     12.426    12.316     0.000     0.109      500   Range#each
  0.03  24134.521     8.262     0.000 24126.259      205   Array#each
  0.01      2.172     2.062     0.000     0.109        1   Array#sort
  0.01  24354.704     1.777     0.000 24352.927        1   Global#[No method]
  0.00      0.441     0.441     0.000     0.000 26240000   String#chr
  0.00      0.438     0.273     0.000     0.164 13387096   Kernel#rand
  0.00  20311.192     0.189     0.000 20311.003      102   Object#reproduce
  0.00  24352.927     0.189     0.000 24352.737        1   Object#search
  0.00     12.609     0.184     0.000    12.426      500   Enumerable#inject
  0.00      0.184     0.184     0.000     0.000    51000   Float#>=
  0.00      0.184     0.184     0.000     0.000    51000   Fixnum#modulo
  0.00      0.811     0.170     0.000     0.641    51500   Object#onemax
  0.00  24297.675     0.164     0.000 24297.511   102501  *Integer#times
  0.00      0.164     0.164     0.000     0.000   230606   Fixnum#<=>
  0.00    214.926     0.164     0.000   214.762      103   Class#new
  0.00      0.164     0.164     0.000     0.000      103   <Class::Array>#allocate
  0.00      0.164     0.164     0.000     0.000      188   Array#first
  0.00      0.164     0.164     0.000     0.000   100474   <Class::Range>#allocate
  0.00      0.164     0.164     0.000     0.000   152096   Kernel#respond_to_missing?
  0.00   1245.525     0.115     0.000  1245.410    51000   Object#point_mutation
  0.00      0.279     0.115     0.000     0.164    51000   Object#binary_tournament
  0.00     12.834     0.115     0.000    12.719      500   Object#random_bitstring
  0.00      0.219     0.109     0.000     0.109      102   IO#puts
  0.00      0.109     0.109     0.000     0.000      102   Fixnum#to_s
  0.00      0.328     0.109     0.000     0.219      102   Kernel#puts
  0.00      0.164     0.109     0.000     0.055      102   Array#sort!
  0.00  20311.003     0.109     0.000 20310.894      102   Enumerable#each_with_index
  0.00      0.109     0.109     0.000     0.000      204   IO#write

* indicates recursively called methods
