 >num_bits=256
 >population=300
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
 > gen 123
Measure Mode: memory
Thread ID: 77242330
Fiber ID: 78000930
Total: 17758.621094
Sort by: self_time

 %self      total      self      wait     child     calls  name
 52.57  13895.633  9336.518     0.000  4559.115    37200   Object#crossover
 25.67   4558.986  4558.986     0.000     0.000 19196028   String#[]
 15.67   2783.570  2783.570     0.000     0.000   111900   Hash#[]=
  0.83    155.027   146.797     0.000     8.230      125   Array#initialize
  0.06  17598.789     9.980     0.000 17588.809      249   Array#each
  0.04      7.543     7.434     0.000     0.109      300   Range#each
  0.01  17758.621     1.777     0.000 17756.844        1   Global#[No method]
  0.01      1.391     1.281     0.000     0.109        1   Array#sort
  0.00      0.441     0.441     0.000     0.000 19123200   String#chr
  0.00      0.438     0.273     0.000     0.164  9748136   Kernel#rand
  0.00  14814.523     0.189     0.000 14814.334      124   Object#reproduce
  0.00  17756.844     0.189     0.000 17756.654        1   Object#search
  0.00      7.727     0.184     0.000     7.543      300   Enumerable#inject
  0.00      0.184     0.184     0.000     0.000    37200   Float#>=
  0.00      0.184     0.184     0.000     0.000    37200   Fixnum#modulo
  0.00      0.811     0.170     0.000     0.641    37500   Object#onemax
  0.00  17722.881     0.164     0.000 17722.717    74701  *Integer#times
  0.00      0.164     0.164     0.000     0.000   161129   Fixnum#<=>
  0.00    155.355     0.164     0.000   155.191      125   Class#new
  0.00      0.164     0.164     0.000     0.000      125   <Class::Array>#allocate
  0.00      0.164     0.164     0.000     0.000      218   Array#first
  0.00      0.164     0.164     0.000     0.000    73128   <Class::Range>#allocate
  0.00      0.164     0.164     0.000     0.000   110936   Kernel#respond_to_missing?
  0.00    908.611     0.115     0.000   908.496    37200   Object#point_mutation
  0.00      0.279     0.115     0.000     0.164    37200   Object#binary_tournament
  0.00      7.951     0.115     0.000     7.836      300   Object#random_bitstring
  0.00      0.219     0.109     0.000     0.109      124   IO#puts
  0.00      0.109     0.109     0.000     0.000      124   Fixnum#to_s
  0.00      0.328     0.109     0.000     0.219      124   Kernel#puts
  0.00      0.164     0.109     0.000     0.055      124   Array#sort!
  0.00  14814.334     0.109     0.000 14814.225      124   Enumerable#each_with_index
  0.00      0.109     0.109     0.000     0.000      248   IO#write

* indicates recursively called methods
