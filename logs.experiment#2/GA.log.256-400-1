 >num_bits=256
 >population=400
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
Measure Mode: memory
Thread ID: 68954090
Fiber ID: 69712790
Total: 21984.251953
Sort by: self_time

 %self      total      self      wait     child     calls  name
 52.52  17208.979 11545.111     0.000  5663.867    46000   Object#crossover
 25.76   5663.738  5663.738     0.000     0.000 23744622   String#[]
 15.67   3444.117  3444.117     0.000     0.000   138400   Hash#[]=
  0.83    192.234   181.562     0.000    10.672      116   Array#initialize
  0.04      9.984     9.875     0.000     0.109      400   Range#each
  0.04  21786.822     9.277     0.000 21777.545      231   Array#each
  0.01  21984.252     1.777     0.000 21982.475        1   Global#[No method]
  0.01      1.781     1.672     0.000     0.109        1   Array#sort
  0.00      0.441     0.441     0.000     0.000 23654400   String#chr
  0.00      0.438     0.273     0.000     0.164 12061613   Kernel#rand
  0.00  18342.010     0.189     0.000 18341.820      115   Object#reproduce
  0.00  21982.475     0.189     0.000 21982.285        1   Object#search
  0.00     10.168     0.184     0.000     9.984      400   Enumerable#inject
  0.00      0.184     0.184     0.000     0.000    46000   Float#>=
  0.00      0.184     0.184     0.000     0.000    46000   Fixnum#modulo
  0.00      0.811     0.170     0.000     0.641    46400   Object#onemax
  0.00  21937.867     0.164     0.000 21937.703    92401  *Integer#times
  0.00      0.164     0.164     0.000     0.000   202279   Fixnum#<=>
  0.00    192.562     0.164     0.000   192.398      116   Class#new
  0.00      0.164     0.164     0.000     0.000      116   <Class::Array>#allocate
  0.00      0.164     0.164     0.000     0.000      198   Array#first
  0.00      0.164     0.164     0.000     0.000    90622   <Class::Range>#allocate
  0.00      0.164     0.164     0.000     0.000   137213   Kernel#respond_to_missing?
  0.00   1123.455     0.115     0.000  1123.340    46000   Object#point_mutation
  0.00      0.279     0.115     0.000     0.164    46000   Object#binary_tournament
  0.00     10.393     0.115     0.000    10.277      400   Object#random_bitstring
  0.00      0.219     0.109     0.000     0.109      115   IO#puts
  0.00      0.109     0.109     0.000     0.000      115   Fixnum#to_s
  0.00      0.328     0.109     0.000     0.219      115   Kernel#puts
  0.00      0.164     0.109     0.000     0.055      115   Array#sort!
  0.00  18341.820     0.109     0.000 18341.711      115   Enumerable#each_with_index
  0.00      0.109     0.109     0.000     0.000      230   IO#write

* indicates recursively called methods
