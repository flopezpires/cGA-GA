 >num_bits=256
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
Measure Mode: memory
Thread ID: 74833890
Fiber ID: 75592590
Total: 11452.587891
Sort by: self_time

 %self      total      self      wait     child     calls  name
 52.60   8954.072  6023.627     0.000  2930.445    24000   Object#crossover
 25.59   2930.316  2930.316     0.000     0.000 12386212   String#[]
 15.69   1796.461  1796.461     0.000     0.000    72200   Hash#[]=
  0.83    100.633    94.844     0.000     5.789      121   Array#initialize
  0.08  11347.541     9.668     0.000 11337.873      241   Array#each
  0.04      5.102     4.992     0.000     0.109      200   Range#each
  0.02  11452.588     1.777     0.000 11450.811        1   Global#[No method]
  0.01      1.000     0.891     0.000     0.109        1   Array#sort
  0.00      0.441     0.441     0.000     0.000 12339200   String#chr
  0.00      0.438     0.273     0.000     0.164  6290810   Kernel#rand
  0.00   9550.385     0.189     0.000  9550.195      120   Object#reproduce
  0.00  11450.811     0.189     0.000 11450.621        1   Object#search
  0.00      5.285     0.184     0.000     5.102      200   Enumerable#inject
  0.00      0.184     0.184     0.000     0.000    24000   Float#>=
  0.00      0.184     0.184     0.000     0.000    24000   Fixnum#modulo
  0.00      0.811     0.170     0.000     0.641    24200   Object#onemax
  0.00  11427.492     0.164     0.000 11427.328    48201  *Integer#times
  0.00      0.164     0.164     0.000     0.000   102676   Fixnum#<=>
  0.00    100.961     0.164     0.000   100.797      121   Class#new
  0.00      0.164     0.164     0.000     0.000      121   <Class::Array>#allocate
  0.00      0.164     0.164     0.000     0.000      216   Array#first
  0.00      0.164     0.164     0.000     0.000    47212   <Class::Range>#allocate
  0.00      0.164     0.164     0.000     0.000    71610   Kernel#respond_to_missing?
  0.00    586.346     0.115     0.000   586.230    24000   Object#point_mutation
  0.00      0.279     0.115     0.000     0.164    24000   Object#binary_tournament
  0.00      5.510     0.115     0.000     5.395      200   Object#random_bitstring
  0.00      0.219     0.109     0.000     0.109      120   IO#puts
  0.00      0.109     0.109     0.000     0.000      120   Fixnum#to_s
  0.00      0.328     0.109     0.000     0.219      120   Kernel#puts
  0.00      0.164     0.109     0.000     0.055      120   Array#sort!
  0.00   9550.195     0.109     0.000  9550.086      120   Enumerable#each_with_index
  0.00      0.109     0.109     0.000     0.000      240   IO#write

* indicates recursively called methods
