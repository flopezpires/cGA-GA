 >num_bits=256
 >population=300
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
 > gen 123
 > gen 124
 > gen 125
 > gen 126
 > gen 127
Measure Mode: memory
Thread ID: 69548010
Fiber ID: 70306710
Total: 18342.214844
Sort by: self_time

 %self      total      self      wait     child     calls  name
 52.54  14355.867  9637.689     0.000  4718.178    38400   Object#crossover
 25.72   4718.049  4718.049     0.000     0.000 19812840   String#[]
 15.66   2872.633  2872.633     0.000     0.000   115500   Hash#[]=
  0.83    159.715   151.484     0.000     8.230      129   Array#initialize
  0.06  18177.695    10.293     0.000 18167.402      257   Array#each
  0.04      7.543     7.434     0.000     0.109      300   Range#each
  0.01  18342.215     1.777     0.000 18340.438        1   Global#[No method]
  0.01      1.391     1.281     0.000     0.109        1   Array#sort
  0.00      0.441     0.441     0.000     0.000 19737600   String#chr
  0.00      0.438     0.273     0.000     0.164 10060141   Kernel#rand
  0.00  15304.367     0.189     0.000 15304.178      128   Object#reproduce
  0.00  18340.438     0.189     0.000 18340.248        1   Object#search
  0.00      7.727     0.184     0.000     7.543      300   Enumerable#inject
  0.00      0.184     0.184     0.000     0.000    38400   Float#>=
  0.00      0.184     0.184     0.000     0.000    38400   Fixnum#modulo
  0.00      0.811     0.170     0.000     0.641    38700   Object#onemax
  0.00  18306.475     0.164     0.000 18306.311    77101  *Integer#times
  0.00      0.164     0.164     0.000     0.000   165429   Fixnum#<=>
  0.00    160.043     0.164     0.000   159.879      129   Class#new
  0.00      0.164     0.164     0.000     0.000      129   <Class::Array>#allocate
  0.00      0.164     0.164     0.000     0.000      228   Array#first
  0.00      0.164     0.164     0.000     0.000    75540   <Class::Range>#allocate
  0.00      0.164     0.164     0.000     0.000   114541   Kernel#respond_to_missing?
  0.00    937.908     0.115     0.000   937.793    38400   Object#point_mutation
  0.00      0.279     0.115     0.000     0.164    38400   Object#binary_tournament
  0.00      7.951     0.115     0.000     7.836      300   Object#random_bitstring
  0.00      0.219     0.109     0.000     0.109      128   IO#puts
  0.00      0.109     0.109     0.000     0.000      128   Fixnum#to_s
  0.00      0.328     0.109     0.000     0.219      128   Kernel#puts
  0.00      0.164     0.109     0.000     0.055      128   Array#sort!
  0.00  15304.178     0.109     0.000 15304.068      128   Enumerable#each_with_index
  0.00      0.109     0.109     0.000     0.000      256   IO#write

* indicates recursively called methods
