 >num_bits=128
 >population=300
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 80912400
Fiber ID: 81711550
Total: 41.160000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.75      6.072     6.072     0.000     0.000  5107200   String#chr
 14.38      5.920     5.920     0.000     0.000  5146002   String#[]
  7.13      2.992     2.936     0.000     0.056  2651675   Kernel#rand
  0.98     40.384     0.404     0.000    39.980      133   Array#each
  0.73      0.520     0.300     0.000     0.220    19800   Object#crossover
  0.42      0.272     0.172     0.000     0.100    19800   Object#binary_tournament
  0.38      0.184     0.156     0.000     0.028      300   Range#each
  0.37      0.236     0.152     0.000     0.084       66   Array#sort!
  0.36     40.956     0.148     0.000    40.808    39901  *Integer#times
  0.20     25.636     0.084     0.000    25.552    19800   Object#point_mutation
  0.20      0.084     0.084     0.000     0.000    83438   Fixnum#<=>
  0.19     13.732     0.080     0.000    13.652    20100   Object#onemax
  0.17      0.072     0.072     0.000     0.000    59700   Hash#[]=
  0.16      0.532     0.064     0.000     0.468       67   Array#initialize
  0.14      0.056     0.056     0.000     0.000    59075   Kernel#respond_to_missing?
  0.13      0.052     0.052     0.000     0.000    39102   <Class::Range>#allocate
  0.05      0.020     0.020     0.000     0.000    19800   Fixnum#modulo
  0.04      0.016     0.016     0.000     0.000    19800   Float#>=
  0.02      0.196     0.008     0.000     0.188      300   Object#random_bitstring
  0.01      0.188     0.004     0.000     0.184      300   Enumerable#inject
  0.01      0.004     0.004     0.000     0.000        1   Array#sort
  0.01      0.004     0.004     0.000     0.000       66   IO#puts
  0.00     41.160     0.000     0.000    41.160        1   Global#[No method]
  0.00     41.160     0.000     0.000    41.160        1   Object#search
  0.00      0.004     0.000     0.000     0.004       66   Kernel#puts
  0.00     26.524     0.000     0.000    26.524       66   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000       66   Fixnum#to_s
  0.00     26.524     0.000     0.000    26.524       66   Object#reproduce
  0.00      0.000     0.000     0.000     0.000       67   <Class::Array>#allocate
  0.00      0.532     0.000     0.000     0.532       67   Class#new
  0.00      0.000     0.000     0.000     0.000      122   Array#first
  0.00      0.000     0.000     0.000     0.000      132   IO#write

* indicates recursively called methods
