 >num_bits=64
 >population=500
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
done! Solution: f=64, s=1111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 75372560
Fiber ID: 76171790
Total: 13.788000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.24      1.964     1.964     0.000     0.000  1656494   String#[]
 12.85      1.772     1.772     0.000     0.000  1632000   String#chr
  7.92      1.152     1.092     0.000     0.060   881769   Kernel#rand
  1.54     13.268     0.212     0.000    13.056       51   Array#each
  1.19      0.328     0.164     0.000     0.164    12500   Object#crossover
  0.90      0.164     0.124     0.000     0.040      500   Range#each
  0.75     13.600     0.104     0.000    13.496    25501  *Integer#times
  0.61      0.152     0.084     0.000     0.068       25   Array#sort!
  0.58      4.488     0.080     0.000     4.408    13000   Object#onemax
  0.58      0.172     0.080     0.000     0.092    12500   Object#binary_tournament
  0.55      0.076     0.076     0.000     0.000    54138   Fixnum#<=>
  0.46      8.184     0.064     0.000     8.120    12500   Object#point_mutation
  0.44      0.060     0.060     0.000     0.000    37269   Kernel#respond_to_missing?
  0.38      0.052     0.052     0.000     0.000    24994   <Class::Range>#allocate
  0.38      0.052     0.052     0.000     0.000    38000   Hash#[]=
  0.15      0.360     0.020     0.000     0.340       26   Array#initialize
  0.03      0.004     0.004     0.000     0.000    12500   Float#>=
  0.03      0.168     0.004     0.000     0.164      500   Object#random_bitstring
  0.03      0.004     0.004     0.000     0.000    12500   Fixnum#modulo
  0.00      0.000     0.000     0.000     0.000       50   IO#write
  0.00      0.360     0.000     0.000     0.360       26   Class#new
  0.00      0.000     0.000     0.000     0.000       49   Array#first
  0.00      8.700     0.000     0.000     8.700       25   Object#reproduce
  0.00      8.700     0.000     0.000     8.700       25   Enumerable#each_with_index
  0.00      0.164     0.000     0.000     0.164      500   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000       25   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000       25   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       25   IO#puts
  0.00      0.000     0.000     0.000     0.000       26   <Class::Array>#allocate
  0.00      0.008     0.000     0.000     0.008        1   Array#sort

* indicates recursively called methods
