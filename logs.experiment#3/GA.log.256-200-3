 >num_bits=256
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
 > gen 123
 > gen 124
 > gen 125
 > gen 126
 > gen 127
 > gen 128
 > gen 129
 > gen 130
 > gen 131
 > gen 132
 > gen 133
 > gen 134
 > gen 135
 > gen 136
 > gen 137
 > gen 138
 > gen 139
 > gen 140
 > gen 141
 > gen 142
 > gen 143
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 77615120
Fiber ID: 78414470
Total: 120.840000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.87     17.968    17.968     0.000     0.000 14853276   String#[]
 14.77     17.848    17.848     0.000     0.000 14796800   String#chr
  7.95      9.700     9.612     0.000     0.088  7538758   Kernel#rand
  0.46    119.760     0.556     0.000   119.204      289   Array#each
  0.30      0.696     0.364     0.000     0.332    28800   Object#crossover
  0.22      0.356     0.264     0.000     0.092      144   Array#sort!
  0.19      0.400     0.224     0.000     0.176    28800   Object#binary_tournament
  0.18      0.268     0.220     0.000     0.048      200   Range#each
  0.13    120.564     0.160     0.000   120.404    57801  *Integer#times
  0.12     79.024     0.148     0.000    78.876    28800   Object#point_mutation
  0.10      0.120     0.120     0.000     0.000    86600   Hash#[]=
  0.08      0.092     0.092     0.000     0.000   119872   Fixnum#<=>
  0.08     39.324     0.092     0.000    39.232    29000   Object#onemax
  0.07      0.088     0.088     0.000     0.000    85958   Kernel#respond_to_missing?
  0.07      0.080     0.080     0.000     0.000    56676   <Class::Range>#allocate
  0.04      0.720     0.052     0.000     0.668      145   Array#initialize
  0.03      0.040     0.040     0.000     0.000    28800   Fixnum#modulo
  0.01      0.016     0.016     0.000     0.000    28800   Float#>=
  0.00      0.004     0.004     0.000     0.000      144   IO#puts
  0.00      0.000     0.000     0.000     0.000      288   IO#write
  0.00      0.720     0.000     0.000     0.720      145   Class#new
  0.00      0.000     0.000     0.000     0.000      251   Array#first
  0.00     80.296     0.000     0.000    80.296      144   Object#reproduce
  0.00     80.296     0.000     0.000    80.296      144   Enumerable#each_with_index
  0.00      0.268     0.000     0.000     0.268      200   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000      144   Fixnum#to_s
  0.00      0.268     0.000     0.000     0.268      200   Object#random_bitstring
  0.00      0.004     0.000     0.000     0.004      144   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      145   <Class::Array>#allocate
  0.00      0.000     0.000     0.000     0.000        1   Array#sort

* indicates recursively called methods
