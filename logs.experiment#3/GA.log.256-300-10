 >num_bits=256
 >population=300
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 81985540
Fiber ID: 83007740
Total: 150.448000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.92     22.448    22.448     0.000     0.000 19041846   String#[]
 14.75     22.184    22.184     0.000     0.000 18969600   String#chr
  7.74     11.784    11.644     0.000     0.140  9670145   Kernel#rand
  0.43    148.980     0.652     0.000   148.328      247   Array#each
  0.28      0.868     0.424     0.000     0.444    36900   Object#crossover
  0.20      0.400     0.300     0.000     0.100      300   Range#each
  0.20      0.468     0.300     0.000     0.168      123   Array#sort!
  0.16      0.500     0.236     0.000     0.264    36900   Object#binary_tournament
  0.16    150.044     0.236     0.000   149.808    74101  *Integer#times
  0.11     95.688     0.172     0.000    95.516    36900   Object#point_mutation
  0.11      0.168     0.168     0.000     0.000   160509   Fixnum#<=>
  0.10      0.148     0.148     0.000     0.000   111000   Hash#[]=
  0.09      0.140     0.140     0.000     0.000   110045   Kernel#respond_to_missing?
  0.09     51.584     0.136     0.000    51.448    37200   Object#onemax
  0.08      0.116     0.116     0.000     0.000    72546   <Class::Range>#allocate
  0.06      0.984     0.084     0.000     0.900      124   Array#initialize
  0.03      0.040     0.040     0.000     0.000    36900   Fixnum#modulo
  0.02      0.024     0.024     0.000     0.000    36900   Float#>=
  0.00      0.004     0.004     0.000     0.000      123   IO#puts
  0.00      0.004     0.004     0.000     0.000      123   Fixnum#to_s
  0.00      0.004     0.004     0.000     0.000        1   Array#sort
  0.00     97.244     0.004     0.000    97.240      123   Object#reproduce
  0.00      0.000     0.000     0.000     0.000      246   IO#write
  0.00      0.000     0.000     0.000     0.000      223   Array#first
  0.00      0.400     0.000     0.000     0.400      300   Enumerable#inject
  0.00     97.240     0.000     0.000    97.240      123   Enumerable#each_with_index
  0.00      0.400     0.000     0.000     0.400      300   Object#random_bitstring
  0.00      0.984     0.000     0.000     0.984      124   Class#new
  0.00      0.000     0.000     0.000     0.000      124   <Class::Array>#allocate
  0.00      0.004     0.000     0.000     0.004      123   Kernel#puts

* indicates recursively called methods
