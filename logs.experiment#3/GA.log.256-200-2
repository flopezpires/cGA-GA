 >num_bits=256
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
 > gen 123
 > gen 124
 > gen 125
 > gen 126
 > gen 127
 > gen 128
 > gen 129
 > gen 130
 > gen 131
 > gen 132
 > gen 133
 > gen 134
 > gen 135
 > gen 136
 > gen 137
 > gen 138
 > gen 139
 > gen 140
 > gen 141
 > gen 142
 > gen 143
 > gen 144
 > gen 145
 > gen 146
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 74555420
Fiber ID: 75787760
Total: 118.436000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.12     17.912    17.912     0.000     0.000 15161574   String#[]
 14.52     17.200    17.200     0.000     0.000 15104000   String#chr
  7.64      9.152     9.052     0.000     0.100  7694740   Kernel#rand
  0.46    117.352     0.544     0.000   116.808      295   Array#each
  0.32      0.756     0.384     0.000     0.372    29400   Object#crossover
  0.22      0.352     0.260     0.000     0.092      147   Array#sort!
  0.20      0.268     0.232     0.000     0.036      200   Range#each
  0.16     75.732     0.188     0.000    75.544    29400   Object#point_mutation
  0.13      0.372     0.156     0.000     0.216    29400   Object#binary_tournament
  0.12    118.164     0.148     0.000   118.016    59001  *Integer#times
  0.11     40.164     0.136     0.000    40.028    29600   Object#onemax
  0.10      0.124     0.124     0.000     0.000    88400   Hash#[]=
  0.08      0.100     0.100     0.000     0.000    87740   Kernel#respond_to_missing?
  0.08      0.096     0.096     0.000     0.000   121732   Fixnum#<=>
  0.08      0.092     0.092     0.000     0.000    57774   <Class::Range>#allocate
  0.06      0.712     0.072     0.000     0.640      148   Array#initialize
  0.03      0.040     0.040     0.000     0.000    29400   Float#>=
  0.03      0.032     0.032     0.000     0.000    29400   Fixnum#modulo
  0.01      0.008     0.008     0.000     0.000      294   IO#write
  0.01     77.056     0.008     0.000    77.048      147   Object#reproduce
  0.00    118.436     0.000     0.000   118.436        1   Object#search
  0.00      0.004     0.000     0.000     0.004        1   Array#sort
  0.00      0.000     0.000     0.000     0.000      254   Array#first
  0.00     77.048     0.000     0.000    77.048      147   Enumerable#each_with_index
  0.00      0.268     0.000     0.000     0.268      200   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000      147   Fixnum#to_s
  0.00      0.268     0.000     0.000     0.268      200   Object#random_bitstring
  0.00      0.008     0.000     0.000     0.008      147   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      148   <Class::Array>#allocate
  0.00      0.712     0.000     0.000     0.712      148   Class#new
  0.00      0.008     0.000     0.000     0.008      147   IO#puts

* indicates recursively called methods
