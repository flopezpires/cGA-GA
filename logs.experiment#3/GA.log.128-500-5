 >num_bits=128
 >population=500
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 72054800
Fiber ID: 72853360
Total: 63.764000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.09      9.624     9.624     0.000     0.000  7931814   String#[]
 14.21      9.064     9.064     0.000     0.000  7872000   String#chr
  7.73      5.012     4.928     0.000     0.084  4089467   Kernel#rand
  0.88     62.568     0.560     0.000    62.008      123   Array#each
  0.73      0.812     0.468     0.000     0.344    30500   Object#crossover
  0.41      0.376     0.264     0.000     0.112       61   Array#sort!
  0.40      0.328     0.256     0.000     0.072      500   Range#each
  0.33      0.384     0.212     0.000     0.172    30500   Object#binary_tournament
  0.32     39.712     0.204     0.000    39.508    30500   Object#point_mutation
  0.31     63.412     0.196     0.000    63.216    61501  *Integer#times
  0.25      0.160     0.160     0.000     0.000    92000   Hash#[]=
  0.24     21.300     0.152     0.000    21.148    31000   Object#onemax
  0.18      0.112     0.112     0.000     0.000   132772   Fixnum#<=>
  0.14      0.808     0.088     0.000     0.720       62   Array#initialize
  0.13      0.084     0.084     0.000     0.000    90967   Kernel#respond_to_missing?
  0.12      0.076     0.076     0.000     0.000    60314   <Class::Range>#allocate
  0.04      0.024     0.024     0.000     0.000    30500   Float#>=
  0.04      0.024     0.024     0.000     0.000    30500   Fixnum#modulo
  0.01      0.332     0.004     0.000     0.328      500   Enumerable#inject
  0.01      0.004     0.004     0.000     0.000        1   Array#sort
  0.01      0.004     0.004     0.000     0.000       62   <Class::Array>#allocate
  0.01      0.004     0.004     0.000     0.000       61   Kernel#puts
  0.00     63.764     0.000     0.000    63.764        1   Global#[No method]
  0.00     63.764     0.000     0.000    63.764        1   Object#search
  0.00      0.000     0.000     0.000     0.000       61   Fixnum#to_s
  0.00     41.108     0.000     0.000    41.108       61   Enumerable#each_with_index
  0.00      0.336     0.000     0.000     0.336      500   Object#random_bitstring
  0.00     41.108     0.000     0.000    41.108       61   Object#reproduce
  0.00      0.000     0.000     0.000     0.000       61   IO#puts
  0.00      0.812     0.000     0.000     0.812       62   Class#new
  0.00      0.000     0.000     0.000     0.000      110   Array#first
  0.00      0.000     0.000     0.000     0.000      122   IO#write

* indicates recursively called methods
