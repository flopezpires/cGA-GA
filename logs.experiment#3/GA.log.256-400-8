 >num_bits=256
 >population=400
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 75935760
Fiber ID: 76734890
Total: 180.708000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.03     27.156    27.156     0.000     0.000 22922348   String#[]
 14.54     26.276    26.276     0.000     0.000 22835200   String#chr
  7.93     14.444    14.328     0.000     0.116 11645684   Kernel#rand
  0.46    178.916     0.840     0.000   178.076      223   Array#each
  0.27      1.152     0.484     0.000     0.668    44400   Object#crossover
  0.24      0.524     0.432     0.000     0.092      400   Range#each
  0.22      0.580     0.404     0.000     0.176      111   Array#sort!
  0.17    180.168     0.312     0.000   179.856    89201  *Integer#times
  0.17      0.576     0.308     0.000     0.268    44400   Object#binary_tournament
  0.13      0.236     0.236     0.000     0.000   133600   Hash#[]=
  0.13    115.720     0.232     0.000   115.488    44400   Object#point_mutation
  0.12     60.936     0.216     0.000    60.720    44800   Object#onemax
  0.10      0.184     0.184     0.000     0.000   197316   Fixnum#<=>
  0.07      0.132     0.132     0.000     0.000    87548   <Class::Range>#allocate
  0.06      0.116     0.116     0.000     0.000   132484   Kernel#respond_to_missing?
  0.05      1.192     0.088     0.000     1.104      112   Array#initialize
  0.03      0.056     0.056     0.000     0.000    44400   Float#>=
  0.02      0.032     0.032     0.000     0.000    44400   Fixnum#modulo
  0.00      0.528     0.004     0.000     0.524      400   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000      208   Array#first
  0.00      0.000     0.000     0.000     0.000      112   <Class::Array>#allocate
  0.00    117.716     0.000     0.000   117.716      111   Object#reproduce
  0.00    117.716     0.000     0.000   117.716      111   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000      111   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000      111   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      111   IO#puts
  0.00      0.528     0.000     0.000     0.528      400   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000      222   IO#write
  0.00      0.008     0.000     0.000     0.008        1   Array#sort

* indicates recursively called methods
