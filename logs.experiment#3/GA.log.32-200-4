 >num_bits=32
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
done! Solution: f=32, s=11111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 70516740
Fiber ID: 71538790
Total: 1.804000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.41      0.260     0.260     0.000     0.000   198400   String#chr
 12.64      0.228     0.228     0.000     0.000   204264   String#[]
  9.31      0.172     0.168     0.000     0.004   114344   Kernel#rand
  2.88      0.088     0.052     0.000     0.036     3000   Object#crossover
  2.22      1.676     0.040     0.000     1.636       31   Array#each
  1.77      0.984     0.032     0.000     0.952     3000   Object#point_mutation
  1.33      0.024     0.024     0.000     0.000    11892   Fixnum#<=>
  1.33      0.032     0.024     0.000     0.008      200   Range#each
  1.11      1.760     0.020     0.000     1.740     6201  *Integer#times
  0.89      0.040     0.016     0.000     0.024       15   Array#sort!
  0.89      0.552     0.016     0.000     0.536     3200   Object#onemax
  0.67      0.012     0.012     0.000     0.000     9200   Hash#[]=
  0.67      0.040     0.012     0.000     0.028     3000   Object#binary_tournament
  0.44      0.084     0.008     0.000     0.076       16   Array#initialize
  0.22      0.036     0.004     0.000     0.032      200   Object#random_bitstring
  0.22      0.004     0.004     0.000     0.000     8944   Kernel#respond_to_missing?
  0.22      0.004     0.004     0.000     0.000        1   Array#sort
  0.00      1.804     0.000     0.000     1.804        1   Global#[No method]
  0.00      0.000     0.000     0.000     0.000       31   Array#first
  0.00      1.108     0.000     0.000     1.108       15   Object#reproduce
  0.00      1.108     0.000     0.000     1.108       15   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000     3000   Fixnum#modulo
  0.00      0.000     0.000     0.000     0.000     3000   Float#>=
  0.00      0.000     0.000     0.000     0.000       15   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000       30   IO#write
  0.00      0.000     0.000     0.000     0.000     6064   <Class::Range>#allocate
  0.00      0.000     0.000     0.000     0.000       15   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       15   IO#puts
  0.00      0.000     0.000     0.000     0.000       16   <Class::Array>#allocate
  0.00      0.084     0.000     0.000     0.084       16   Class#new
  0.00      0.032     0.000     0.000     0.032      200   Enumerable#inject

* indicates recursively called methods
