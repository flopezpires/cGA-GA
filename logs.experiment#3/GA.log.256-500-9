 >num_bits=256
 >population=500
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 69847060
Fiber ID: 71080810
Total: 227.148000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.36     34.896    34.896     0.000     0.000 28652742   String#[]
 14.47     32.872    32.872     0.000     0.000 28544000   String#chr
  7.61     17.424    17.288     0.000     0.136 14556979   Kernel#rand
  0.41    224.900     0.920     0.000   223.980      223   Array#each
  0.30      1.364     0.676     0.000     0.688    55500   Object#crossover
  0.23      0.652     0.528     0.000     0.124      500   Range#each
  0.20      0.712     0.460     0.000     0.252      111   Array#sort!
  0.18    226.476     0.412     0.000   226.064   111501  *Integer#times
  0.17      0.704     0.392     0.000     0.312    55500   Object#binary_tournament
  0.14      0.316     0.316     0.000     0.000   167000   Hash#[]=
  0.12    144.640     0.280     0.000   144.360    55500   Object#point_mutation
  0.11      0.260     0.260     0.000     0.000   247631   Fixnum#<=>
  0.11     77.600     0.260     0.000    77.340    56000   Object#onemax
  0.07      1.524     0.164     0.000     1.360      112   Array#initialize
  0.07      0.160     0.160     0.000     0.000   109242   <Class::Range>#allocate
  0.06      0.136     0.136     0.000     0.000   165479   Kernel#respond_to_missing?
  0.03      0.060     0.060     0.000     0.000    55500   Fixnum#modulo
  0.01      0.028     0.028     0.000     0.000    55500   Float#>=
  0.00      0.656     0.004     0.000     0.652      500   Object#random_bitstring
  0.00    147.064     0.004     0.000   147.060      111   Enumerable#each_with_index
  0.00      1.524     0.000     0.000     1.524      112   Class#new
  0.00      0.000     0.000     0.000     0.000      222   IO#write
  0.00      0.000     0.000     0.000     0.000      209   Array#first
  0.00    147.064     0.000     0.000   147.064      111   Object#reproduce
  0.00      0.652     0.000     0.000     0.652      500   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000      111   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000      111   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      111   IO#puts
  0.00      0.000     0.000     0.000     0.000      112   <Class::Array>#allocate
  0.00      0.008     0.000     0.000     0.008        1   Array#sort

* indicates recursively called methods
