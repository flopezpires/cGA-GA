 >num_bits=64
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
done! Solution: f=64, s=1111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 70662160
Fiber ID: 71460720
Total: 6.844000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.49      0.992     0.992     0.000     0.000   825122   String#[]
 14.32      0.980     0.980     0.000     0.000   812800   String#chr
  8.24      0.588     0.564     0.000     0.024   434729   Kernel#rand
  1.40      0.144     0.096     0.000     0.048     6300   Object#crossover
  1.05      6.636     0.072     0.000     6.564      127   Array#each
  0.76      0.076     0.052     0.000     0.024       63   Array#sort!
  0.70      0.084     0.048     0.000     0.036     6300   Object#binary_tournament
  0.58      6.812     0.040     0.000     6.772    12701  *Integer#times
  0.41      2.192     0.028     0.000     2.164     6400   Object#onemax
  0.35      0.024     0.024     0.000     0.000    18829   Kernel#respond_to_missing?
  0.35      4.200     0.024     0.000     4.176     6300   Object#point_mutation
  0.35      0.024     0.024     0.000     0.000    22869   Fixnum#<=>
  0.29      0.032     0.020     0.000     0.012      100   Range#each
  0.23      0.016     0.016     0.000     0.000     6300   Fixnum#modulo
  0.18      0.012     0.012     0.000     0.000    19000   Hash#[]=
  0.12      0.124     0.008     0.000     0.116       64   Array#initialize
  0.12      0.008     0.008     0.000     0.000    12422   <Class::Range>#allocate
  0.06      0.004     0.004     0.000     0.000     6300   Float#>=
  0.00      6.844     0.000     0.000     6.844        1   Object#search
  0.00      6.844     0.000     0.000     6.844        1   Global#[No method]
  0.00      0.000     0.000     0.000     0.000        1   Array#sort
  0.00      0.000     0.000     0.000     0.000      106   Array#first
  0.00      4.424     0.000     0.000     4.424       63   Object#reproduce
  0.00      4.424     0.000     0.000     4.424       63   Enumerable#each_with_index
  0.00      0.032     0.000     0.000     0.032      100   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000       63   Fixnum#to_s
  0.00      0.032     0.000     0.000     0.032      100   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000       63   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       64   <Class::Array>#allocate
  0.00      0.124     0.000     0.000     0.124       64   Class#new
  0.00      0.000     0.000     0.000     0.000       63   IO#puts
  0.00      0.000     0.000     0.000     0.000      126   IO#write

* indicates recursively called methods
