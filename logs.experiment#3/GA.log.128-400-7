 >num_bits=128
 >population=400
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 71075860
Fiber ID: 72309470
Total: 59.840000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.51      8.680     8.680     0.000     0.000  7424000   String#chr
 14.03      8.396     8.396     0.000     0.000  7480484   String#[]
  7.95      4.832     4.760     0.000     0.072  3852317   Kernel#rand
  0.94     58.724     0.564     0.000    58.160      145   Array#each
  0.63      0.720     0.376     0.000     0.344    28800   Object#crossover
  0.45      0.380     0.268     0.000     0.112       72   Array#sort!
  0.38      0.412     0.228     0.000     0.184    28800   Object#binary_tournament
  0.35      0.260     0.208     0.000     0.052      400   Range#each
  0.25     59.564     0.148     0.000    59.416    58001  *Integer#times
  0.25      0.148     0.148     0.000     0.000    86800   Hash#[]=
  0.23     37.280     0.140     0.000    37.140    28800   Object#point_mutation
  0.21     19.980     0.124     0.000    19.856    29200   Object#onemax
  0.19      0.112     0.112     0.000     0.000   121436   Fixnum#<=>
  0.12      0.072     0.072     0.000     0.000    85917   Kernel#respond_to_missing?
  0.10      0.060     0.060     0.000     0.000    56884   <Class::Range>#allocate
  0.07      0.720     0.044     0.000     0.676       73   Array#initialize
  0.05      0.032     0.032     0.000     0.000    28800   Fixnum#modulo
  0.01      0.008     0.008     0.000     0.000    28800   Float#>=
  0.01      0.008     0.008     0.000     0.000        1   Array#sort
  0.01      0.004     0.004     0.000     0.000       72   Fixnum#to_s
  0.01      0.264     0.004     0.000     0.260      400   Object#random_bitstring
  0.01      0.724     0.004     0.000     0.720       73   Class#new
  0.00     59.840     0.000     0.000    59.840        1   Global#[No method]
  0.00     59.840     0.000     0.000    59.840        1   Object#search
  0.00      0.000     0.000     0.000     0.000       72   Kernel#puts
  0.00     38.608     0.000     0.000    38.608       72   Object#reproduce
  0.00     38.608     0.000     0.000    38.608       72   Enumerable#each_with_index
  0.00      0.260     0.000     0.000     0.260      400   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000       73   <Class::Array>#allocate
  0.00      0.000     0.000     0.000     0.000       72   IO#puts
  0.00      0.000     0.000     0.000     0.000      130   Array#first
  0.00      0.000     0.000     0.000     0.000      144   IO#write

* indicates recursively called methods
