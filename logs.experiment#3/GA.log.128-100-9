 >num_bits=128
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 70979600
Fiber ID: 71778150
Total: 18.940000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.91      2.824     2.824     0.000     0.000  2386010   String#[]
 13.39      2.536     2.536     0.000     0.000  2368000   String#chr
  7.43      1.436     1.408     0.000     0.028  1227092   Kernel#rand
  0.89     18.604     0.168     0.000    18.436      185   Array#each
  0.65      0.244     0.124     0.000     0.120     9200   Object#crossover
  0.46      0.104     0.088     0.000     0.016       92   Array#sort!
  0.34      0.128     0.064     0.000     0.064     9200   Object#binary_tournament
  0.34     11.880     0.064     0.000    11.816     9200   Object#point_mutation
  0.30      6.276     0.056     0.000     6.220     9300   Object#onemax
  0.30      0.064     0.056     0.000     0.008      100   Range#each
  0.27     18.872     0.052     0.000    18.820    18501  *Integer#times
  0.15      0.028     0.028     0.000     0.000    27492   Kernel#respond_to_missing?
  0.15      0.028     0.028     0.000     0.000    27700   Hash#[]=
  0.15      0.224     0.028     0.000     0.196       93   Array#initialize
  0.11      0.020     0.020     0.000     0.000    18110   <Class::Range>#allocate
  0.08      0.016     0.016     0.000     0.000     9200   Float#>=
  0.08      0.016     0.016     0.000     0.000    35200   Fixnum#<=>
  0.04      0.008     0.008     0.000     0.000     9200   Fixnum#modulo
  0.02      0.068     0.004     0.000     0.064      100   Object#random_bitstring
  0.02      0.228     0.004     0.000     0.224       93   Class#new
  0.00     18.940     0.000     0.000    18.940        1   Object#search
  0.00     18.940     0.000     0.000    18.940        1   Global#[No method]
  0.00      0.000     0.000     0.000     0.000        1   Array#sort
  0.00      0.000     0.000     0.000     0.000      156   Array#first
  0.00      0.064     0.000     0.000     0.064      100   Enumerable#inject
  0.00     12.260     0.000     0.000    12.260       92   Object#reproduce
  0.00     12.260     0.000     0.000    12.260       92   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000       92   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000       93   <Class::Array>#allocate
  0.00      0.000     0.000     0.000     0.000       92   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       92   IO#puts
  0.00      0.000     0.000     0.000     0.000      184   IO#write

* indicates recursively called methods
