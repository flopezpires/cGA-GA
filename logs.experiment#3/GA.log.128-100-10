 >num_bits=128
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 76288020
Fiber ID: 77522410
Total: 22.056000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.83      3.272     3.272     0.000     0.000  2772998   String#[]
 14.25      3.144     3.144     0.000     0.000  2752000   String#chr
  7.74      1.732     1.708     0.000     0.024  1425116   Kernel#rand
  0.89     21.696     0.196     0.000    21.500      215   Array#each
  0.65      0.236     0.144     0.000     0.092    10700   Object#crossover
  0.33      0.144     0.072     0.000     0.072    10700   Object#binary_tournament
  0.31      7.276     0.068     0.000     7.208    10800   Object#onemax
  0.31      0.104     0.068     0.000     0.036      107   Array#sort!
  0.31     13.928     0.068     0.000    13.860    10700   Object#point_mutation
  0.24      0.064     0.052     0.000     0.012      100   Range#each
  0.24      0.052     0.052     0.000     0.000    32200   Hash#[]=
  0.18     21.988     0.040     0.000    21.948    21501  *Integer#times
  0.16      0.244     0.036     0.000     0.208      108   Array#initialize
  0.16      0.036     0.036     0.000     0.000    39769   Fixnum#<=>
  0.11      0.024     0.024     0.000     0.000    32016   Kernel#respond_to_missing?
  0.09      0.020     0.020     0.000     0.000    21098   <Class::Range>#allocate
  0.04      0.008     0.008     0.000     0.000    10700   Fixnum#modulo
  0.04      0.008     0.008     0.000     0.000    10700   Float#>=
  0.02      0.004     0.004     0.000     0.000        1   Array#sort
  0.00     22.056     0.000     0.000    22.056        1   Global#[No method]
  0.00     22.056     0.000     0.000    22.056        1   Object#search
  0.00      0.000     0.000     0.000     0.000      107   Kernel#puts
  0.00     14.356     0.000     0.000    14.356      107   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000      107   Fixnum#to_s
  0.00      0.064     0.000     0.000     0.064      100   Enumerable#inject
  0.00     14.356     0.000     0.000    14.356      107   Object#reproduce
  0.00      0.064     0.000     0.000     0.064      100   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000      107   IO#puts
  0.00      0.000     0.000     0.000     0.000      108   <Class::Array>#allocate
  0.00      0.244     0.000     0.000     0.244      108   Class#new
  0.00      0.000     0.000     0.000     0.000      179   Array#first
  0.00      0.000     0.000     0.000     0.000      214   IO#write

* indicates recursively called methods
