 >num_bits=256
 >population=400
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 76544020
Fiber ID: 77778490
Total: 161.352000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.24     24.596    24.596     0.000     0.000 20455150   String#[]
 14.77     23.828    23.828     0.000     0.000 20377600   String#chr
  7.69     12.568    12.408     0.000     0.160 10397661   Kernel#rand
  0.38    159.656     0.612     0.000   159.044      199   Array#each
  0.27      0.524     0.432     0.000     0.092      400   Range#each
  0.27      0.992     0.428     0.000     0.564    39600   Object#crossover
  0.24      0.560     0.388     0.000     0.172       99   Array#sort!
  0.19    160.812     0.300     0.000   160.512    79601  *Integer#times
  0.15      0.492     0.248     0.000     0.244    39600   Object#binary_tournament
  0.13      0.216     0.216     0.000     0.000   119200   Hash#[]=
  0.12     55.060     0.200     0.000    54.860    40000   Object#onemax
  0.12    102.732     0.188     0.000   102.544    39600   Object#point_mutation
  0.11      0.172     0.172     0.000     0.000   180801   Fixnum#<=>
  0.10      0.160     0.160     0.000     0.000   118061   Kernel#respond_to_missing?
  0.08      0.136     0.136     0.000     0.000    77950   <Class::Range>#allocate
  0.07      1.132     0.112     0.000     1.020      100   Array#initialize
  0.03      0.044     0.044     0.000     0.000    39600   Float#>=
  0.03      0.044     0.044     0.000     0.000    39600   Fixnum#modulo
  0.00      0.528     0.004     0.000     0.524      400   Object#random_bitstring
  0.00      0.004     0.004     0.000     0.000        1   Array#sort
  0.00      0.000     0.000     0.000     0.000      198   IO#write
  0.00      0.000     0.000     0.000     0.000      181   Array#first
  0.00    104.424     0.000     0.000   104.424       99   Object#reproduce
  0.00    104.424     0.000     0.000   104.424       99   Enumerable#each_with_index
  0.00      0.524     0.000     0.000     0.524      400   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000       99   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000      100   <Class::Array>#allocate
  0.00      0.000     0.000     0.000     0.000       99   IO#puts
  0.00      0.000     0.000     0.000     0.000       99   Kernel#puts

* indicates recursively called methods
