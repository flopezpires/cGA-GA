 >num_bits=128
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 79575060
Fiber ID: 80808810
Total: 18.192000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.63      2.844     2.844     0.000     0.000  2265600   String#chr
 14.34      2.608     2.608     0.000     0.000  2282888   String#[]
  7.81      1.456     1.420     0.000     0.036  1174328   Kernel#rand
  1.03     17.880     0.188     0.000    17.692      177   Array#each
  0.53      0.184     0.096     0.000     0.088     8800   Object#crossover
  0.37      0.104     0.068     0.000     0.036       88   Array#sort!
  0.33      0.124     0.060     0.000     0.064     8800   Object#binary_tournament
  0.29     11.372     0.052     0.000    11.320     8800   Object#point_mutation
  0.29      0.064     0.052     0.000     0.012      100   Range#each
  0.26     18.116     0.048     0.000    18.068    17701  *Integer#times
  0.26      0.048     0.048     0.000     0.000    26500   Hash#[]=
  0.20      0.036     0.036     0.000     0.000    26328   Kernel#respond_to_missing?
  0.20      0.036     0.036     0.000     0.000    33887   Fixnum#<=>
  0.18      0.032     0.032     0.000     0.000    17388   <Class::Range>#allocate
  0.13      6.080     0.024     0.000     6.056     8900   Object#onemax
  0.07      0.200     0.012     0.000     0.188       89   Array#initialize
  0.07      0.012     0.012     0.000     0.000     8800   Float#>=
  0.04      0.008     0.008     0.000     0.000     8800   Fixnum#modulo
  0.02     18.192     0.004     0.000    18.188        1   Global#[No method]
  0.02      0.004     0.004     0.000     0.000        1   Array#sort
  0.00     18.188     0.000     0.000    18.188        1   Object#search
  0.00      0.000     0.000     0.000     0.000       88   Kernel#puts
  0.00     11.764     0.000     0.000    11.764       88   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000       88   Fixnum#to_s
  0.00      0.064     0.000     0.000     0.064      100   Enumerable#inject
  0.00     11.764     0.000     0.000    11.764       88   Object#reproduce
  0.00      0.064     0.000     0.000     0.064      100   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000       88   IO#puts
  0.00      0.000     0.000     0.000     0.000       89   <Class::Array>#allocate
  0.00      0.200     0.000     0.000     0.200       89   Class#new
  0.00      0.000     0.000     0.000     0.000      150   Array#first
  0.00      0.000     0.000     0.000     0.000      176   IO#write

* indicates recursively called methods
