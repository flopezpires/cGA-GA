 >num_bits=256
 >population=500
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 75855900
Fiber ID: 77088360
Total: 221.816000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.02     33.316    33.316     0.000     0.000 28138782   String#[]
 14.88     33.004    33.004     0.000     0.000 28032000   String#chr
  7.62     17.076    16.912     0.000     0.164 14297020   Kernel#rand
  0.45    219.580     1.004     0.000   218.576      219   Array#each
  0.30      1.376     0.664     0.000     0.712    54500   Object#crossover
  0.24      0.656     0.532     0.000     0.124      500   Range#each
  0.20      0.712     0.444     0.000     0.268      109   Array#sort!
  0.19      0.748     0.432     0.000     0.316    54500   Object#binary_tournament
  0.17    221.140     0.380     0.000   220.760   109501  *Integer#times
  0.13     75.812     0.288     0.000    75.524    55000   Object#onemax
  0.12      0.276     0.276     0.000     0.000   242315   Fixnum#<=>
  0.12    141.092     0.276     0.000   140.816    54500   Object#point_mutation
  0.10      0.232     0.232     0.000     0.000   164000   Hash#[]=
  0.08      0.172     0.172     0.000     0.000   107282   <Class::Range>#allocate
  0.07      0.164     0.164     0.000     0.000   162520   Kernel#respond_to_missing?
  0.04      1.504     0.096     0.000     1.408      110   Array#initialize
  0.03      0.076     0.076     0.000     0.000    54500   Float#>=
  0.03      0.064     0.064     0.000     0.000    54500   Fixnum#modulo
  0.00      1.508     0.004     0.000     1.504      110   Class#new
  0.00      0.660     0.004     0.000     0.656      500   Object#random_bitstring
  0.00      0.004     0.004     0.000     0.000      109   IO#puts
  0.00    143.520     0.004     0.000   143.516      109   Object#reproduce
  0.00      0.000     0.000     0.000     0.000      218   IO#write
  0.00      0.000     0.000     0.000     0.000      192   Array#first
  0.00      0.656     0.000     0.000     0.656      500   Enumerable#inject
  0.00    143.516     0.000     0.000   143.516      109   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000      109   Fixnum#to_s
  0.00      0.004     0.000     0.000     0.004      109   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      110   <Class::Array>#allocate
  0.00      0.008     0.000     0.000     0.008        1   Array#sort

* indicates recursively called methods
