 >num_bits=128
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 79302660
Fiber ID: 80324710
Total: 37.928000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.83      5.624     5.624     0.000     0.000  4772014   String#[]
 14.18      5.380     5.380     0.000     0.000  4736000   String#chr
  7.77      3.004     2.948     0.000     0.056  2454103   Kernel#rand
  0.79     37.304     0.300     0.000    37.004      185   Array#each
  0.58      0.424     0.220     0.000     0.204    18400   Object#crossover
  0.39      0.188     0.148     0.000     0.040       92   Array#sort!
  0.37      0.252     0.140     0.000     0.112    18400   Object#binary_tournament
  0.28      0.132     0.108     0.000     0.024      200   Range#each
  0.28     37.792     0.108     0.000    37.684    37001  *Integer#times
  0.24      0.092     0.092     0.000     0.000    55400   Hash#[]=
  0.21     23.776     0.080     0.000    23.696    18400   Object#point_mutation
  0.17     12.688     0.064     0.000    12.624    18600   Object#onemax
  0.15      0.056     0.056     0.000     0.000    54903   Kernel#respond_to_missing?
  0.11      0.040     0.040     0.000     0.000    73586   Fixnum#<=>
  0.09      0.036     0.036     0.000     0.000    36214   <Class::Range>#allocate
  0.08      0.416     0.032     0.000     0.384       93   Array#initialize
  0.07      0.028     0.028     0.000     0.000    18400   Float#>=
  0.06      0.024     0.024     0.000     0.000    18400   Fixnum#modulo
  0.01      0.004     0.004     0.000     0.000        1   Array#sort
  0.01      0.004     0.004     0.000     0.000      184   IO#write
  0.00     37.928     0.000     0.000    37.928        1   Global#[No method]
  0.00     37.928     0.000     0.000    37.928        1   Object#search
  0.00      0.004     0.000     0.000     0.004       92   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       92   Fixnum#to_s
  0.00      0.132     0.000     0.000     0.132      200   Enumerable#inject
  0.00     24.528     0.000     0.000    24.528       92   Enumerable#each_with_index
  0.00      0.132     0.000     0.000     0.132      200   Object#random_bitstring
  0.00      0.004     0.000     0.000     0.004       92   IO#puts
  0.00      0.000     0.000     0.000     0.000       93   <Class::Array>#allocate
  0.00      0.416     0.000     0.000     0.416       93   Class#new
  0.00     24.528     0.000     0.000    24.528       92   Object#reproduce
  0.00      0.000     0.000     0.000     0.000      160   Array#first

* indicates recursively called methods
