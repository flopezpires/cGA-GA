 >num_bits=256
 >population=400
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 82788380
Fiber ID: 84020760
Total: 183.488000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.81     27.168    27.168     0.000     0.000 23333392   String#[]
 14.71     26.984    26.984     0.000     0.000 23244800   String#chr
  7.48     13.860    13.728     0.000     0.132 11853611   Kernel#rand
  0.42    181.656     0.776     0.000   180.880      227   Array#each
  0.28      1.092     0.520     0.000     0.572    45200   Object#crossover
  0.23      0.612     0.420     0.000     0.192      113   Array#sort!
  0.22      0.524     0.408     0.000     0.116      400   Range#each
  0.16      0.548     0.292     0.000     0.256    45200   Object#binary_tournament
  0.15    182.944     0.276     0.000   182.668    90801  *Integer#times
  0.14     62.116     0.256     0.000    61.860    45600   Object#onemax
  0.12    117.380     0.228     0.000   117.152    45200   Object#point_mutation
  0.12      0.220     0.220     0.000     0.000   136000   Hash#[]=
  0.10      0.192     0.192     0.000     0.000   201536   Fixnum#<=>
  0.08      0.152     0.152     0.000     0.000    88992   <Class::Range>#allocate
  0.07      0.132     0.132     0.000     0.000   134811   Kernel#respond_to_missing?
  0.07      1.200     0.124     0.000     1.076      114   Array#initialize
  0.04      0.072     0.072     0.000     0.000    45200   Fixnum#modulo
  0.03      0.048     0.048     0.000     0.000    45200   Float#>=
  0.00      1.204     0.004     0.000     1.200      114   Class#new
  0.00      0.528     0.004     0.000     0.524      400   Object#random_bitstring
  0.00      0.004     0.004     0.000     0.000        1   Array#sort
  0.00      0.004     0.004     0.000     0.000      226   IO#write
  0.00      0.000     0.000     0.000     0.000      204   Array#first
  0.00    119.336     0.000     0.000   119.336      113   Object#reproduce
  0.00      0.524     0.000     0.000     0.524      400   Enumerable#inject
  0.00    119.336     0.000     0.000   119.336      113   Enumerable#each_with_index
  0.00      0.004     0.000     0.000     0.004      113   IO#puts
  0.00      0.004     0.000     0.000     0.004      113   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      114   <Class::Array>#allocate
  0.00      0.000     0.000     0.000     0.000      113   Fixnum#to_s

* indicates recursively called methods
