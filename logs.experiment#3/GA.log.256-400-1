 >num_bits=256
 >population=400
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 80375820
Fiber ID: 81172930
Total: 198.832000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.19     30.200    30.200     0.000     0.000 25183652   String#[]
 14.42     28.676    28.676     0.000     0.000 25088000   String#chr
  7.58     15.224    15.072     0.000     0.152 12789548   Kernel#rand
  0.40    196.896     0.800     0.000   196.096      245   Array#each
  0.30      1.252     0.592     0.000     0.660    48800   Object#crossover
  0.21      0.612     0.424     0.000     0.188      122   Array#sort!
  0.20      0.524     0.400     0.000     0.124      400   Range#each
  0.18      0.684     0.360     0.000     0.324    48800   Object#binary_tournament
  0.15    198.296     0.308     0.000   197.988    98001  *Integer#times
  0.13    126.124     0.260     0.000   125.864    48800   Object#point_mutation
  0.12     68.440     0.244     0.000    68.196    49200   Object#onemax
  0.11      0.224     0.224     0.000     0.000   146800   Hash#[]=
  0.09      0.188     0.188     0.000     0.000   212231   Fixnum#<=>
  0.08      0.152     0.152     0.000     0.000   145548   Kernel#respond_to_missing?
  0.07      0.132     0.132     0.000     0.000    96052   <Class::Range>#allocate
  0.05      1.316     0.104     0.000     1.212      123   Array#initialize
  0.03      0.056     0.056     0.000     0.000    48800   Fixnum#modulo
  0.03      0.052     0.052     0.000     0.000    48800   Float#>=
  0.00      0.528     0.004     0.000     0.524      400   Object#random_bitstring
  0.00      0.004     0.004     0.000     0.000        1   Array#sort
  0.00      0.004     0.004     0.000     0.000      206   Array#first
  0.00    198.832     0.000     0.000   198.832        1   Global#[No method]
  0.00    198.832     0.000     0.000   198.832        1   Object#search
  0.00      0.000     0.000     0.000     0.000      122   Kernel#puts
  0.00      0.524     0.000     0.000     0.524      400   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000      122   Fixnum#to_s
  0.00    128.252     0.000     0.000   128.252      122   Enumerable#each_with_index
  0.00    128.252     0.000     0.000   128.252      122   Object#reproduce
  0.00      0.000     0.000     0.000     0.000      123   <Class::Array>#allocate
  0.00      0.000     0.000     0.000     0.000      244   IO#write
  0.00      0.000     0.000     0.000     0.000      122   IO#puts

* indicates recursively called methods
