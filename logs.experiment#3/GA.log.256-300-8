 >num_bits=256
 >population=300
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 78487580
Fiber ID: 79720010
Total: 137.820000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.82     20.428    20.428     0.000     0.000 17280000   String#chr
 14.73     20.296    20.296     0.000     0.000 17345822   String#[]
  7.63     10.640    10.520     0.000     0.120  8812236   Kernel#rand
  0.44    136.460     0.604     0.000   135.856      225   Array#each
  0.27      0.776     0.376     0.000     0.400    33600   Object#crossover
  0.25      0.396     0.340     0.000     0.056      300   Range#each
  0.23      0.440     0.320     0.000     0.120      112   Array#sort!
  0.16      0.468     0.224     0.000     0.244    33600   Object#binary_tournament
  0.16    137.416     0.220     0.000   137.196    67501  *Integer#times
  0.11      0.148     0.148     0.000     0.000   101100   Hash#[]=
  0.10     87.828     0.136     0.000    87.692    33600   Object#point_mutation
  0.10     47.072     0.132     0.000    46.940    33900   Object#onemax
  0.09      0.120     0.120     0.000     0.000   100236   Kernel#respond_to_missing?
  0.09      0.120     0.120     0.000     0.000   147765   Fixnum#<=>
  0.08      0.112     0.112     0.000     0.000    66122   <Class::Range>#allocate
  0.03      0.912     0.048     0.000     0.864      113   Array#initialize
  0.02      0.032     0.032     0.000     0.000    33600   Fixnum#modulo
  0.02      0.024     0.024     0.000     0.000    33600   Float#>=
  0.00      0.004     0.004     0.000     0.000      224   IO#write
  0.00      0.004     0.004     0.000     0.000        1   Array#sort
  0.00      0.000     0.000     0.000     0.000      203   Array#first
  0.00     89.204     0.000     0.000    89.204      112   Object#reproduce
  0.00     89.204     0.000     0.000    89.204      112   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000      112   Fixnum#to_s
  0.00      0.396     0.000     0.000     0.396      300   Enumerable#inject
  0.00      0.912     0.000     0.000     0.912      113   Class#new
  0.00      0.396     0.000     0.000     0.396      300   Object#random_bitstring
  0.00      0.004     0.000     0.000     0.004      112   IO#puts
  0.00      0.000     0.000     0.000     0.000      113   <Class::Array>#allocate
  0.00      0.004     0.000     0.000     0.004      112   Kernel#puts

* indicates recursively called methods
