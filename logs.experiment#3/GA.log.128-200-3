 >num_bits=128
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 72947740
Fiber ID: 74180210
Total: 25.744000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.15      3.900     3.900     0.000     0.000  3224324   String#[]
 14.45      3.720     3.720     0.000     0.000  3200000   String#chr
  7.77      2.032     2.000     0.000     0.032  1662226   Kernel#rand
  0.76     25.276     0.196     0.000    25.080      125   Array#each
  0.59      0.308     0.152     0.000     0.156    12400   Object#crossover
  0.40      0.136     0.104     0.000     0.032      200   Range#each
  0.36      0.132     0.092     0.000     0.040       62   Array#sort!
  0.30      8.624     0.076     0.000     8.548    12600   Object#onemax
  0.30      0.164     0.076     0.000     0.088    12400   Object#binary_tournament
  0.26     25.608     0.068     0.000    25.540    25001  *Integer#times
  0.26      0.068     0.068     0.000     0.000    37400   Hash#[]=
  0.22      0.056     0.056     0.000     0.000    24524   <Class::Range>#allocate
  0.16     16.064     0.040     0.000    16.024    12400   Object#point_mutation
  0.16      0.040     0.040     0.000     0.000    52243   Fixnum#<=>
  0.14      0.336     0.036     0.000     0.300       63   Array#initialize
  0.12      0.032     0.032     0.000     0.000    37026   Kernel#respond_to_missing?
  0.06      0.016     0.016     0.000     0.000    12400   Fixnum#modulo
  0.06      0.016     0.016     0.000     0.000    12400   Float#>=
  0.00     25.744     0.000     0.000    25.744        1   Object#search
  0.00     25.744     0.000     0.000    25.744        1   Global#[No method]
  0.00      0.000     0.000     0.000     0.000        1   Array#sort
  0.00      0.000     0.000     0.000     0.000      112   Array#first
  0.00     16.600     0.000     0.000    16.600       62   Object#reproduce
  0.00     16.600     0.000     0.000    16.600       62   Enumerable#each_with_index
  0.00      0.136     0.000     0.000     0.136      200   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000       62   Fixnum#to_s
  0.00      0.136     0.000     0.000     0.136      200   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000       62   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       63   <Class::Array>#allocate
  0.00      0.336     0.000     0.000     0.336       63   Class#new
  0.00      0.000     0.000     0.000     0.000       62   IO#puts
  0.00      0.000     0.000     0.000     0.000      124   IO#write

* indicates recursively called methods
