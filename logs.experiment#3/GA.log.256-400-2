 >num_bits=256
 >population=400
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 78897180
Fiber ID: 80129560
Total: 170.464000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.45     26.332    26.332     0.000     0.000 21483072   String#[]
 14.66     24.984    24.984     0.000     0.000 21401600   String#chr
  7.60     13.092    12.956     0.000     0.136 10917644   Kernel#rand
  0.38    168.680     0.640     0.000   168.040      209   Array#each
  0.27      0.972     0.456     0.000     0.516    41600   Object#crossover
  0.25      0.564     0.420     0.000     0.144      104   Array#sort!
  0.23      0.528     0.400     0.000     0.128      400   Range#each
  0.19      0.584     0.328     0.000     0.256    41600   Object#binary_tournament
  0.15    169.916     0.256     0.000   169.660    83601  *Integer#times
  0.13      0.228     0.228     0.000     0.000   125200   Hash#[]=
  0.12    108.256     0.200     0.000   108.056    41600   Object#point_mutation
  0.09     58.544     0.156     0.000    58.388    42000   Object#onemax
  0.09      0.148     0.148     0.000     0.000   187492   Fixnum#<=>
  0.08      0.136     0.136     0.000     0.000   124044   Kernel#respond_to_missing?
  0.05      0.092     0.092     0.000     0.000    81872   <Class::Range>#allocate
  0.05      1.204     0.084     0.000     1.120      105   Array#initialize
  0.03      0.044     0.044     0.000     0.000    41600   Float#>=
  0.02      0.040     0.040     0.000     0.000    41600   Fixnum#modulo
  0.00      0.008     0.004     0.000     0.004        1   Array#sort
  0.00      0.532     0.004     0.000     0.528      400   Enumerable#inject
  0.00      0.536     0.004     0.000     0.532      400   Object#random_bitstring
  0.00      0.004     0.004     0.000     0.000      176   Array#first
  0.00      0.000     0.000     0.000     0.000      208   IO#write
  0.00    109.944     0.000     0.000   109.944      104   Object#reproduce
  0.00    109.944     0.000     0.000   109.944      104   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000      104   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000      104   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      105   <Class::Array>#allocate
  0.00      0.000     0.000     0.000     0.000      104   IO#puts

* indicates recursively called methods
