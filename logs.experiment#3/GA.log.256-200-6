 >num_bits=256
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
 > gen 123
 > gen 124
 > gen 125
 > gen 126
 > gen 127
 > gen 128
 > gen 129
 > gen 130
 > gen 131
 > gen 132
 > gen 133
 > gen 134
 > gen 135
 > gen 136
 > gen 137
 > gen 138
 > gen 139
 > gen 140
 > gen 141
 > gen 142
 > gen 143
 > gen 144
 > gen 145
 > gen 146
 > gen 147
 > gen 148
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 83167260
Fiber ID: 84399720
Total: 120.100000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.90     17.900    17.900     0.000     0.000 15367216   String#[]
 14.52     17.436    17.436     0.000     0.000 15308800   String#chr
  7.58      9.212     9.100     0.000     0.112  7798767   Kernel#rand
  0.44    119.036     0.532     0.000   118.504      299   Array#each
  0.29      0.752     0.348     0.000     0.404    29800   Object#crossover
  0.19      0.336     0.232     0.000     0.104      149   Array#sort!
  0.18      0.412     0.216     0.000     0.196    29800   Object#binary_tournament
  0.18      0.256     0.212     0.000     0.044      200   Range#each
  0.15    119.824     0.184     0.000   119.640    59801  *Integer#times
  0.14     40.908     0.164     0.000    40.744    30000   Object#onemax
  0.13      0.160     0.160     0.000     0.000    89600   Hash#[]=
  0.10     76.664     0.116     0.000    76.548    29800   Object#point_mutation
  0.09      0.112     0.112     0.000     0.000    88967   Kernel#respond_to_missing?
  0.09      0.108     0.108     0.000     0.000   122794   Fixnum#<=>
  0.09      0.104     0.104     0.000     0.000    58616   <Class::Range>#allocate
  0.04      0.720     0.044     0.000     0.676      150   Array#initialize
  0.02      0.028     0.028     0.000     0.000    29800   Float#>=
  0.02      0.020     0.020     0.000     0.000    29800   Fixnum#modulo
  0.00      0.264     0.004     0.000     0.260      200   Object#random_bitstring
  0.00      0.260     0.004     0.000     0.256      200   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000      298   IO#write
  0.00      0.720     0.000     0.000     0.720      150   Class#new
  0.00      0.000     0.000     0.000     0.000      264   Array#first
  0.00     77.960     0.000     0.000    77.960      149   Object#reproduce
  0.00     77.960     0.000     0.000    77.960      149   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000      149   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000      149   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      149   IO#puts
  0.00      0.000     0.000     0.000     0.000      150   <Class::Array>#allocate
  0.00      0.004     0.000     0.000     0.004        1   Array#sort

* indicates recursively called methods
