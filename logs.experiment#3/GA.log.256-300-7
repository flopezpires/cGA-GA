 >num_bits=256
 >population=300
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 79896580
Fiber ID: 80918740
Total: 138.924000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.06     20.924    20.924     0.000     0.000 17654250   String#[]
 14.38     19.976    19.976     0.000     0.000 17587200   String#chr
  7.40     10.384    10.276     0.000     0.108  8968248   Kernel#rand
  0.38    137.536     0.532     0.000   137.004      229   Array#each
  0.35      0.932     0.492     0.000     0.440    34200   Object#crossover
  0.25      0.392     0.344     0.000     0.048      300   Range#each
  0.22      0.436     0.312     0.000     0.124      114   Array#sort!
  0.19      0.476     0.268     0.000     0.208    34200   Object#binary_tournament
  0.18    138.520     0.244     0.000   138.276    68701  *Integer#times
  0.11     47.680     0.156     0.000    47.524    34500   Object#onemax
  0.11      0.148     0.148     0.000     0.000   102900   Hash#[]=
  0.10     88.212     0.140     0.000    88.072    34200   Object#point_mutation
  0.09      0.124     0.124     0.000     0.000   150432   Fixnum#<=>
  0.08      0.116     0.116     0.000     0.000    67350   <Class::Range>#allocate
  0.08      0.108     0.108     0.000     0.000   102048   Kernel#respond_to_missing?
  0.05      0.940     0.068     0.000     0.872      115   Array#initialize
  0.02      0.032     0.032     0.000     0.000    34200   Fixnum#modulo
  0.01      0.020     0.020     0.000     0.000    34200   Float#>=
  0.00      0.004     0.004     0.000     0.000        1   Array#sort
  0.00      0.396     0.004     0.000     0.392      300   Object#random_bitstring
  0.00     89.720     0.004     0.000    89.716      114   Enumerable#each_with_index
  0.00    138.924     0.000     0.000   138.924        1   Global#[No method]
  0.00    138.924     0.000     0.000   138.924        1   Object#search
  0.00      0.000     0.000     0.000     0.000      114   Kernel#puts
  0.00      0.392     0.000     0.000     0.392      300   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000      114   Fixnum#to_s
  0.00     89.720     0.000     0.000    89.720      114   Object#reproduce
  0.00      0.000     0.000     0.000     0.000      114   IO#puts
  0.00      0.000     0.000     0.000     0.000      115   <Class::Array>#allocate
  0.00      0.940     0.000     0.000     0.940      115   Class#new
  0.00      0.000     0.000     0.000     0.000      210   Array#first
  0.00      0.000     0.000     0.000     0.000      228   IO#write

* indicates recursively called methods
