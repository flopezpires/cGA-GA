 >num_bits=256
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
 > gen 123
 > gen 124
 > gen 125
 > gen 126
 > gen 127
 > gen 128
 > gen 129
 > gen 130
 > gen 131
 > gen 132
 > gen 133
 > gen 134
 > gen 135
 > gen 136
 > gen 137
 > gen 138
 > gen 139
 > gen 140
 > gen 141
 > gen 142
 > gen 143
 > gen 144
 > gen 145
 > gen 146
 > gen 147
 > gen 148
 > gen 149
 > gen 150
 > gen 151
 > gen 152
 > gen 153
 > gen 154
 > gen 155
 > gen 156
 > gen 157
 > gen 158
 > gen 159
 > gen 160
 > gen 161
 > gen 162
 > gen 163
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 81594380
Fiber ID: 82391490
Total: 65.720000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.97      9.836     9.836     0.000     0.000  8454470   String#[]
 14.18      9.320     9.320     0.000     0.000  8422400   String#chr
  7.50      4.996     4.932     0.000     0.064  4289394   Kernel#rand
  0.49     65.120     0.320     0.000    64.800      329   Array#each
  0.32      0.440     0.208     0.000     0.232    16400   Object#crossover
  0.19      0.216     0.128     0.000     0.088      164   Array#sort!
  0.17      0.132     0.112     0.000     0.020      100   Range#each
  0.16      0.236     0.108     0.000     0.128    16400   Object#binary_tournament
  0.14     65.588     0.092     0.000    65.496    32901  *Integer#times
  0.14     22.260     0.092     0.000    22.168    16500   Object#onemax
  0.13      0.088     0.088     0.000     0.000    49300   Hash#[]=
  0.13      0.088     0.088     0.000     0.000    64464   Fixnum#<=>
  0.10      0.064     0.064     0.000     0.000    48994   Kernel#respond_to_missing?
  0.09     42.000     0.056     0.000    41.944    16400   Object#point_mutation
  0.08      0.052     0.052     0.000     0.000    32170   <Class::Range>#allocate
  0.03      0.020     0.020     0.000     0.000    16400   Float#>=
  0.02      0.012     0.012     0.000     0.000    16400   Fixnum#modulo
  0.02      0.380     0.012     0.000     0.368      165   Array#initialize
  0.00      0.000     0.000     0.000     0.000      328   IO#write
  0.00      0.380     0.000     0.000     0.380      165   Class#new
  0.00      0.000     0.000     0.000     0.000      272   Array#first
  0.00     42.784     0.000     0.000    42.784      164   Object#reproduce
  0.00     42.784     0.000     0.000    42.784      164   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000      164   Fixnum#to_s
  0.00      0.132     0.000     0.000     0.132      100   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000      164   Kernel#puts
  0.00      0.132     0.000     0.000     0.132      100   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000      164   IO#puts
  0.00      0.000     0.000     0.000     0.000      165   <Class::Array>#allocate
  0.00      0.000     0.000     0.000     0.000        1   Array#sort

* indicates recursively called methods
