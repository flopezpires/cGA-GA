 >num_bits=128
 >population=500
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 79120400
Fiber ID: 79919530
Total: 56.516000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.93      8.440     8.440     0.000     0.000  7028932   String#[]
 14.02      7.924     7.924     0.000     0.000  6976000   String#chr
  7.86      4.532     4.444     0.000     0.088  3627520   Kernel#rand
  0.81     55.388     0.456     0.000    54.932      109   Array#each
  0.64      0.728     0.360     0.000     0.368    27000   Object#crossover
  0.48      0.332     0.272     0.000     0.060      500   Range#each
  0.44      0.360     0.248     0.000     0.112       54   Array#sort!
  0.34      0.364     0.192     0.000     0.172    27000   Object#binary_tournament
  0.30     56.164     0.172     0.000    55.992    54501  *Integer#times
  0.27      0.152     0.152     0.000     0.000    81500   Hash#[]=
  0.23     18.868     0.128     0.000    18.740    27500   Object#onemax
  0.21      0.116     0.116     0.000     0.000   120097   Fixnum#<=>
  0.19     35.148     0.108     0.000    35.040    27000   Object#point_mutation
  0.16      0.088     0.088     0.000     0.000    80520   Kernel#respond_to_missing?
  0.15      0.084     0.084     0.000     0.000    53432   <Class::Range>#allocate
  0.11      0.760     0.060     0.000     0.700       55   Array#initialize
  0.06      0.036     0.036     0.000     0.000    27000   Fixnum#modulo
  0.03      0.016     0.016     0.000     0.000    27000   Float#>=
  0.01      0.008     0.004     0.000     0.004        1   Array#sort
  0.01      0.336     0.004     0.000     0.332      500   Enumerable#inject
  0.00     56.516     0.000     0.000    56.516        1   Global#[No method]
  0.00     56.516     0.000     0.000    56.516        1   Object#search
  0.00      0.336     0.000     0.000     0.336      500   Object#random_bitstring
  0.00     36.392     0.000     0.000    36.392       54   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000       54   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000       54   Kernel#puts
  0.00     36.392     0.000     0.000    36.392       54   Object#reproduce
  0.00      0.000     0.000     0.000     0.000       54   IO#puts
  0.00      0.000     0.000     0.000     0.000       55   <Class::Array>#allocate
  0.00      0.760     0.000     0.000     0.760       55   Class#new
  0.00      0.000     0.000     0.000     0.000       96   Array#first
  0.00      0.000     0.000     0.000     0.000      108   IO#write

* indicates recursively called methods
