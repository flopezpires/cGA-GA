 >num_bits=128
 >population=300
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 72222740
Fiber ID: 73457080
Total: 39.896000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.65      5.844     5.844     0.000     0.000  4991180   String#[]
 14.19      5.660     5.660     0.000     0.000  4953600   String#chr
  7.41      3.024     2.956     0.000     0.068  2572457   Kernel#rand
  0.75     39.164     0.300     0.000    38.864      129   Array#each
  0.53      0.424     0.212     0.000     0.212    19200   Object#crossover
  0.42      0.196     0.168     0.000     0.028      300   Range#each
  0.38      0.248     0.152     0.000     0.096       64   Array#sort!
  0.33      0.260     0.132     0.000     0.128    19200   Object#binary_tournament
  0.25      0.100     0.100     0.000     0.000    82597   Fixnum#<=>
  0.22     39.688     0.088     0.000    39.600    38701  *Integer#times
  0.22      0.088     0.088     0.000     0.000    57900   Hash#[]=
  0.20     13.272     0.080     0.000    13.192    19500   Object#onemax
  0.18     25.056     0.072     0.000    24.984    19200   Object#point_mutation
  0.18      0.072     0.072     0.000     0.000    37880   <Class::Range>#allocate
  0.17      0.068     0.068     0.000     0.000    57257   Kernel#respond_to_missing?
  0.06      0.024     0.024     0.000     0.000    19200   Fixnum#modulo
  0.04      0.476     0.016     0.000     0.460       65   Array#initialize
  0.03      0.012     0.012     0.000     0.000    19200   Float#>=
  0.01      0.004     0.004     0.000     0.000       64   IO#puts
  0.01      0.200     0.004     0.000     0.196      300   Object#random_bitstring
  0.00     39.896     0.000     0.000    39.896        1   Object#search
  0.00     39.896     0.000     0.000    39.896        1   Global#[No method]
  0.00      0.004     0.000     0.000     0.004        1   Array#sort
  0.00      0.000     0.000     0.000     0.000      116   Array#first
  0.00      0.196     0.000     0.000     0.196      300   Enumerable#inject
  0.00     25.796     0.000     0.000    25.796       64   Object#reproduce
  0.00     25.796     0.000     0.000    25.796       64   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000       64   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000       65   <Class::Array>#allocate
  0.00      0.476     0.000     0.000     0.476       65   Class#new
  0.00      0.004     0.000     0.000     0.004       64   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      128   IO#write

* indicates recursively called methods
