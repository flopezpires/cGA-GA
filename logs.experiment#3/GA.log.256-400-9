 >num_bits=256
 >population=400
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
done! Solution: f=256, s=1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 79675420
Fiber ID: 80907880
Total: 193.840000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.75     28.584    28.584     0.000     0.000 24064000   String#chr
 14.67     28.440    28.440     0.000     0.000 24155794   String#[]
  7.71     15.044    14.936     0.000     0.108 12269611   Kernel#rand
  0.38    191.972     0.744     0.000   191.228      235   Array#each
  0.30      1.168     0.580     0.000     0.588    46800   Object#crossover
  0.21      0.592     0.412     0.000     0.180      117   Array#sort!
  0.20      0.520     0.388     0.000     0.132      400   Range#each
  0.19      0.632     0.360     0.000     0.272    46800   Object#binary_tournament
  0.15    193.296     0.300     0.000   192.996    94001  *Integer#times
  0.13      0.248     0.248     0.000     0.000   140800   Hash#[]=
  0.12    123.868     0.240     0.000   123.628    46800   Object#point_mutation
  0.09      0.184     0.184     0.000     0.000   205495   Fixnum#<=>
  0.09     65.900     0.172     0.000    65.728    47200   Object#onemax
  0.07      0.128     0.128     0.000     0.000    92194   <Class::Range>#allocate
  0.06      0.108     0.108     0.000     0.000   139611   Kernel#respond_to_missing?
  0.05      1.252     0.088     0.000     1.164      118   Array#initialize
  0.03      0.060     0.060     0.000     0.000    46800   Float#>=
  0.02      0.044     0.044     0.000     0.000    46800   Fixnum#modulo
  0.00    125.864     0.008     0.000   125.856      117   Object#reproduce
  0.00      0.008     0.004     0.000     0.004        1   Array#sort
  0.00      0.524     0.004     0.000     0.520      400   Enumerable#inject
  0.00      0.532     0.004     0.000     0.528      400   Object#random_bitstring
  0.00      0.004     0.004     0.000     0.000      194   Array#first
  0.00      0.000     0.000     0.000     0.000      234   IO#write
  0.00    125.856     0.000     0.000   125.856      117   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000      117   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000      117   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      118   <Class::Array>#allocate
  0.00      0.000     0.000     0.000     0.000      117   IO#puts

* indicates recursively called methods
