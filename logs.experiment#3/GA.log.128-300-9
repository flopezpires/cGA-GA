 >num_bits=128
 >population=300
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 72427540
Fiber ID: 73661170
Total: 42.596000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.85      6.324     6.324     0.000     0.000  5260800   String#chr
 14.25      6.068     6.068     0.000     0.000  5300822   String#[]
  7.43      3.248     3.164     0.000     0.084  2730876   Kernel#rand
  0.85     41.792     0.364     0.000    41.428      137   Array#each
  0.58      0.528     0.248     0.000     0.280    20400   Object#crossover
  0.40      0.260     0.172     0.000     0.088       68   Array#sort!
  0.38      0.272     0.160     0.000     0.112    20400   Object#binary_tournament
  0.38      0.192     0.160     0.000     0.032      300   Range#each
  0.30     42.388     0.128     0.000    42.260    41101  *Integer#times
  0.29     26.500     0.124     0.000    26.376    20400   Object#point_mutation
  0.27     14.268     0.116     0.000    14.152    20700   Object#onemax
  0.27      0.116     0.116     0.000     0.000    61500   Hash#[]=
  0.22      0.092     0.092     0.000     0.000    85314   Fixnum#<=>
  0.20      0.084     0.084     0.000     0.000    60876   Kernel#respond_to_missing?
  0.15      0.532     0.064     0.000     0.468       69   Array#initialize
  0.14      0.060     0.060     0.000     0.000    40322   <Class::Range>#allocate
  0.09      0.040     0.040     0.000     0.000    20400   Float#>=
  0.04      0.016     0.016     0.000     0.000    20400   Fixnum#modulo
  0.01      0.008     0.004     0.000     0.004        1   Array#sort
  0.00     42.596     0.000     0.000    42.596        1   Global#[No method]
  0.00     42.596     0.000     0.000    42.596        1   Object#search
  0.00      0.000     0.000     0.000     0.000       68   Kernel#puts
  0.00     27.400     0.000     0.000    27.400       68   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000       68   Fixnum#to_s
  0.00      0.192     0.000     0.000     0.192      300   Enumerable#inject
  0.00     27.400     0.000     0.000    27.400       68   Object#reproduce
  0.00      0.196     0.000     0.000     0.196      300   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000       68   IO#puts
  0.00      0.000     0.000     0.000     0.000       69   <Class::Array>#allocate
  0.00      0.532     0.000     0.000     0.532       69   Class#new
  0.00      0.000     0.000     0.000     0.000      132   Array#first
  0.00      0.000     0.000     0.000     0.000      136   IO#write

* indicates recursively called methods
