 >num_bits=128
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
 > gen 96
 > gen 97
 > gen 98
 > gen 99
 > gen 100
 > gen 101
 > gen 102
 > gen 103
 > gen 104
 > gen 105
 > gen 106
 > gen 107
 > gen 108
 > gen 109
 > gen 110
 > gen 111
 > gen 112
 > gen 113
 > gen 114
 > gen 115
 > gen 116
 > gen 117
 > gen 118
 > gen 119
 > gen 120
 > gen 121
 > gen 122
 > gen 123
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 79894540
Fiber ID: 80691650
Total: 25.560000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.74      3.768     3.768     0.000     0.000  3211482   String#[]
 14.44      3.692     3.692     0.000     0.000  3187200   String#chr
  7.81      2.036     1.996     0.000     0.040  1649461   Kernel#rand
  0.78     25.136     0.200     0.000    24.936      249   Array#each
  0.66      0.320     0.168     0.000     0.152    12400   Object#crossover
  0.42      0.148     0.108     0.000     0.040      124   Array#sort!
  0.33      0.168     0.084     0.000     0.084    12400   Object#binary_tournament
  0.27     16.104     0.068     0.000    16.036    12400   Object#point_mutation
  0.20      0.052     0.052     0.000     0.000    37300   Hash#[]=
  0.19      8.436     0.048     0.000     8.388    12500   Object#onemax
  0.16      0.040     0.040     0.000     0.000    46169   Fixnum#<=>
  0.16      0.040     0.040     0.000     0.000    37061   Kernel#respond_to_missing?
  0.14      0.036     0.036     0.000     0.000    24382   <Class::Range>#allocate
  0.14      0.064     0.036     0.000     0.028      100   Range#each
  0.14      0.272     0.036     0.000     0.236      125   Array#initialize
  0.09      0.024     0.024     0.000     0.000    12400   Fixnum#modulo
  0.09     25.488     0.024     0.000    25.464    24901  *Integer#times
  0.08      0.020     0.020     0.000     0.000    12400   Float#>=
  0.02      0.068     0.004     0.000     0.064      100   Object#random_bitstring
  0.00     25.560     0.000     0.000    25.560        1   Object#search
  0.00     25.560     0.000     0.000    25.560        1   Global#[No method]
  0.00      0.000     0.000     0.000     0.000        1   Array#sort
  0.00      0.000     0.000     0.000     0.000      204   Array#first
  0.00     16.664     0.000     0.000    16.664      124   Object#reproduce
  0.00      0.064     0.000     0.000     0.064      100   Enumerable#inject
  0.00     16.664     0.000     0.000    16.664      124   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000      124   Fixnum#to_s
  0.00      0.000     0.000     0.000     0.000      124   Kernel#puts
  0.00      0.000     0.000     0.000     0.000      125   <Class::Array>#allocate
  0.00      0.272     0.000     0.000     0.272      125   Class#new
  0.00      0.000     0.000     0.000     0.000      124   IO#puts
  0.00      0.000     0.000     0.000     0.000      248   IO#write

* indicates recursively called methods
