 >num_bits=128
 >population=100
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
 > gen 82
 > gen 83
 > gen 84
 > gen 85
 > gen 86
 > gen 87
 > gen 88
 > gen 89
 > gen 90
 > gen 91
 > gen 92
 > gen 93
 > gen 94
 > gen 95
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 81051660
Fiber ID: 81848770
Total: 20.492000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.56      2.984     2.984     0.000     0.000  2470400   String#chr
 14.31      2.932     2.932     0.000     0.000  2489218   String#[]
  8.10      1.688     1.660     0.000     0.028  1279913   Kernel#rand
  0.59     20.208     0.120     0.000    20.088      193   Array#each
  0.41      0.152     0.084     0.000     0.068     9600   Object#binary_tournament
  0.33     13.308     0.068     0.000    13.240     9600   Object#point_mutation
  0.29      0.180     0.060     0.000     0.120     9600   Object#crossover
  0.21      0.068     0.044     0.000     0.024      100   Range#each
  0.18     20.424     0.036     0.000    20.388    19301  *Integer#times
  0.14      0.028     0.028     0.000     0.000    28713   Kernel#respond_to_missing?
  0.14      0.248     0.028     0.000     0.220       97   Array#initialize
  0.12      6.572     0.024     0.000     6.548     9700   Object#onemax
  0.12      0.024     0.024     0.000     0.000    18918   <Class::Range>#allocate
  0.12      0.024     0.024     0.000     0.000    28900   Hash#[]=
  0.10      0.036     0.020     0.000     0.016       96   Array#sort!
  0.08      0.016     0.016     0.000     0.000    36557   Fixnum#<=>
  0.02      0.004     0.004     0.000     0.000     9600   Fixnum#modulo
  0.00     20.492     0.000     0.000    20.492        1   Object#search
  0.00     20.492     0.000     0.000    20.492        1   Global#[No method]
  0.00      0.000     0.000     0.000     0.000        1   Array#sort
  0.00      0.000     0.000     0.000     0.000      153   Array#first
  0.00     13.616     0.000     0.000    13.616       96   Object#reproduce
  0.00     13.616     0.000     0.000    13.616       96   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000     9600   Float#>=
  0.00      0.068     0.000     0.000     0.068      100   Enumerable#inject
  0.00      0.000     0.000     0.000     0.000       96   Fixnum#to_s
  0.00      0.068     0.000     0.000     0.068      100   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000       96   Kernel#puts
  0.00      0.000     0.000     0.000     0.000       97   <Class::Array>#allocate
  0.00      0.248     0.000     0.000     0.248       97   Class#new
  0.00      0.000     0.000     0.000     0.000       96   IO#puts
  0.00      0.000     0.000     0.000     0.000      192   IO#write

* indicates recursively called methods
