 >num_bits=128
 >population=400
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 77252620
Fiber ID: 78049730
Total: 54.744000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 14.53      7.956     7.956     0.000     0.000  6758190   String#[]
 14.16      7.752     7.752     0.000     0.000  6707200   String#chr
  7.54      4.212     4.128     0.000     0.084  3482749   Kernel#rand
  0.96     53.724     0.528     0.000    53.196      131   Array#each
  0.67      0.712     0.368     0.000     0.344    26000   Object#crossover
  0.42      0.376     0.228     0.000     0.148    26000   Object#binary_tournament
  0.39      0.316     0.216     0.000     0.100       65   Array#sort!
  0.36      0.268     0.196     0.000     0.072      400   Range#each
  0.33     54.472     0.180     0.000    54.292    52401  *Integer#times
  0.19     34.108     0.104     0.000    34.004    26000   Object#point_mutation
  0.18      0.100     0.100     0.000     0.000   111064   Fixnum#<=>
  0.17      0.092     0.092     0.000     0.000    78400   Hash#[]=
  0.15      0.084     0.084     0.000     0.000    77549   Kernel#respond_to_missing?
  0.14      0.076     0.076     0.000     0.000    51390   <Class::Range>#allocate
  0.13     18.268     0.072     0.000    18.196    26400   Object#onemax
  0.10      0.700     0.056     0.000     0.644       66   Array#initialize
  0.03      0.016     0.016     0.000     0.000    26000   Float#>=
  0.03      0.016     0.016     0.000     0.000    26000   Fixnum#modulo
  0.01      0.004     0.004     0.000     0.000        1   Array#sort
  0.00     54.744     0.000     0.000    54.744        1   Global#[No method]
  0.00     54.744     0.000     0.000    54.744        1   Object#search
  0.00      0.000     0.000     0.000     0.000       65   Kernel#puts
  0.00     35.356     0.000     0.000    35.356       65   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000       65   Fixnum#to_s
  0.00      0.268     0.000     0.000     0.268      400   Enumerable#inject
  0.00     35.356     0.000     0.000    35.356       65   Object#reproduce
  0.00      0.268     0.000     0.000     0.268      400   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000       65   IO#puts
  0.00      0.000     0.000     0.000     0.000       66   <Class::Array>#allocate
  0.00      0.700     0.000     0.000     0.700       66   Class#new
  0.00      0.000     0.000     0.000     0.000      127   Array#first
  0.00      0.000     0.000     0.000     0.000      130   IO#write

* indicates recursively called methods
