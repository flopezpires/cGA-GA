 >num_bits=128
 >population=200
 > gen 0
 > gen 1
 > gen 2
 > gen 3
 > gen 4
 > gen 5
 > gen 6
 > gen 7
 > gen 8
 > gen 9
 > gen 10
 > gen 11
 > gen 12
 > gen 13
 > gen 14
 > gen 15
 > gen 16
 > gen 17
 > gen 18
 > gen 19
 > gen 20
 > gen 21
 > gen 22
 > gen 23
 > gen 24
 > gen 25
 > gen 26
 > gen 27
 > gen 28
 > gen 29
 > gen 30
 > gen 31
 > gen 32
 > gen 33
 > gen 34
 > gen 35
 > gen 36
 > gen 37
 > gen 38
 > gen 39
 > gen 40
 > gen 41
 > gen 42
 > gen 43
 > gen 44
 > gen 45
 > gen 46
 > gen 47
 > gen 48
 > gen 49
 > gen 50
 > gen 51
 > gen 52
 > gen 53
 > gen 54
 > gen 55
 > gen 56
 > gen 57
 > gen 58
 > gen 59
 > gen 60
 > gen 61
 > gen 62
 > gen 63
 > gen 64
 > gen 65
 > gen 66
 > gen 67
 > gen 68
 > gen 69
 > gen 70
 > gen 71
 > gen 72
 > gen 73
 > gen 74
 > gen 75
 > gen 76
 > gen 77
 > gen 78
 > gen 79
 > gen 80
 > gen 81
done! Solution: f=128, s=11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
Measure Mode: cpu_time
Thread ID: 68462620
Fiber ID: 69695080
Total: 33.892000
Sort by: self_time

 %self      total      self      wait     child     calls  name
 15.28      5.180     5.180     0.000     0.000  4256202   String#[]
 14.20      4.812     4.812     0.000     0.000  4224000   String#chr
  7.22      2.500     2.448     0.000     0.052  2190194   Kernel#rand
  0.89     33.280     0.300     0.000    32.980      165   Array#each
  0.60      0.404     0.204     0.000     0.200    16400   Object#crossover
  0.50      0.208     0.168     0.000     0.040       82   Array#sort!
  0.37      0.240     0.124     0.000     0.116    16400   Object#binary_tournament
  0.32      0.132     0.108     0.000     0.024      200   Range#each
  0.28     33.748     0.096     0.000    33.652    33001  *Integer#times
  0.26     11.304     0.088     0.000    11.216    16600   Object#onemax
  0.22      0.076     0.076     0.000     0.000    49400   Hash#[]=
  0.20     21.192     0.068     0.000    21.124    16400   Object#point_mutation
  0.20      0.068     0.068     0.000     0.000    32402   <Class::Range>#allocate
  0.15      0.052     0.052     0.000     0.000    48994   Kernel#respond_to_missing?
  0.12      0.040     0.040     0.000     0.000    66343   Fixnum#<=>
  0.08      0.400     0.028     0.000     0.372       83   Array#initialize
  0.01      0.004     0.004     0.000     0.000    16400   Fixnum#modulo
  0.01      0.004     0.004     0.000     0.000        1   Array#sort
  0.01      0.004     0.004     0.000     0.000    16400   Float#>=
  0.00     33.892     0.000     0.000    33.892        1   Global#[No method]
  0.00     33.892     0.000     0.000    33.892        1   Object#search
  0.00      0.000     0.000     0.000     0.000       82   Kernel#puts
  0.00     21.904     0.000     0.000    21.904       82   Enumerable#each_with_index
  0.00      0.000     0.000     0.000     0.000       82   Fixnum#to_s
  0.00      0.132     0.000     0.000     0.132      200   Enumerable#inject
  0.00     21.904     0.000     0.000    21.904       82   Object#reproduce
  0.00      0.132     0.000     0.000     0.132      200   Object#random_bitstring
  0.00      0.000     0.000     0.000     0.000       82   IO#puts
  0.00      0.000     0.000     0.000     0.000       83   <Class::Array>#allocate
  0.00      0.400     0.000     0.000     0.400       83   Class#new
  0.00      0.000     0.000     0.000     0.000      143   Array#first
  0.00      0.000     0.000     0.000     0.000      164   IO#write

* indicates recursively called methods
